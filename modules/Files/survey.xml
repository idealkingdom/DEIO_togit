<survey xmlns:builder="http://decipherinc.com/builder" xmlns:ss="http://decipherinc.com/ss" xmlns:html="http://decipherinc.com/html" xmlns:autosum="http://decipherinc.com/autosum" xmlns:multicol="http://decipherinc.com/multicol" xmlns:api="http://decipherinc.com/api" alt="33701001 - ORD-429805-P6V6 - Hostess  (Quant) v2" autosaveKey="rnid,psid" browserDupes="safe" builder:wizardCompleted="1" builderCompatible="1" compat="141" delphi="1" displayOnError="all" extraVariables="source,record,ipAddress,decLang,list,userAgent,settings,jumpto" fir="on" html:showNumber="0" markerTimeout="0" mobile="compat" mobileDevices="smartphone,tablet,desktop" name="Survey" remerged="20190914_01:15" secure="1" setup="term,decLang,quota,time" spssSimpleCheckbox="1" ss:disableBackButton="1" ss:enableNavigation="0" ss:hideProgressBar="0" ss:includeJS="/survey/selfserve/dgustlib/res/rnjslib.js?imgsecurity=standard,//d2n88fe5uqdqty.cloudfront.net/rnd/counter/latest/toolcounter.min.js" ss:showBackButton="0" state='closed' theme="frozen:company/theme_dk" version="9" id="survey"><res label="iFrame_Initial" id="PrtNd">Please click here in order to be able to open up the website</res><res label="iFrame_Browse" id="PV7R7">Please can you look at the website, once the website has finished playing you will be able to re-enter the survey.</res><res label="iFrame_Final" id="e9PrI">When you are finished browsing, please click again on this green toolbar in order to return to the survey</res><res label="Adblocker_warning" id="QO2Sq">Your browser has an Ad Blocker extension enabled. Please make sure to disable/pause Ad Blocking on your browser before you select &#8216;Continue&#8217;, otherwise you won&#8217;t be able to complete this survey.</res><res label="Adblocker_error" id="ktUWM">You still do not have your ad blocker disabled, and therefore you will not be allowed into the survey. You may try again later once you have disabled it.</res><res label="Adblocker_success" id="A31HI">Thanks for not running an ad blocker, please click the next button below!</res><res label="Q402postext" id="CRyp1">person / people in my household</res><res label="Q203berr" id="YKgaq">Please check at least 1 box in this column (you checked 0)</res><res label="Sc7cc5052" id="aRuXc">You must not select other snack if selected (Don't recall what food I ate)</res><res label="Sc7cSequence" id="XCuRH">Must answer in sequence order</res><res label="Sc7cDup" id="w7tSQ">Must have no duplicate answer for each row</res><suspend id="p2N4f"/><exec when="init" id="dxOJI">
#D-GUST V2.0.0
#DK settings, set basic and high security keys
#these keys should be changed for every project, please ask your PMs to provide you valid keys for your project
def getDkSecStr():
  try:
    basicKey = 42373
    highKey = 38713
    if  basicKey and highKey:
      return "&amp;high=" + str(basicKey * int(pid) - highKey)
    elif basicKey:
      return "&amp;basic=" + str(basicKey)
    else: return ""
  except:
    return ""
</exec><exec id="uKOfO">
rnentryurl.val = getFullPath(gv)
p.rnPanelName = rnGetPanelName(src)
if p.rnPanelName!='': gv.survey.root.styles.ss.logoFile = 'selfserve/dgustlib/logos/' + p.rnPanelName + '_logo.png'
start_timestamp.val = long(time.time())
</exec><text label="rnentryurl" cond="False" size="200" translateable="0" where="execute,survey,notdp" id="tlBvw"><title id="nR0r1">Hidden- to store survey entry url</title></text><samplesources default="2" id="EatPm"><samplesource keyring="sys/rn" list="1" sign="out" id="v3XDf"><title id="EkMHZ">Research Now (STS UR)</title><invalid id="fc5Ta">The unique number that tracks your progress through this survey is missing. To resume, please click the original link in the email we sent you.</invalid><completed id="kHORP">It seems you have already entered this survey.</completed><var name="stsd1" id="bDuVX"/><var name="stsd2" id="h9YWe"/><var name="stsd3" id="ihgsS"/><var name="stsd4" id="g7hF6"/><var name="stsd5" id="Tdro2"/><var name="stsd6" id="XVXq8"/><var name="stsd7" id="Xb3Wl"/><var name="rnid" unique="1" id="JmmGo"/><var name="study" required="1" id="ab4uC"/><var name="c" id="UmXhx"/><var name="src" id="csaqx"/><exit cond="terminated and (hasMarker('speederAutoCheck') or hasMarker('speederAuto') or hasMarker('slowpokeAuto') or hasMarker('straightlinerAuto') or hasMarker('badopenAuto') or hasMarker('failedAuto'))" url="http://endlinks.researchnow.com/d/?status=4&amp;rnid=${rnid}&amp;study=${study}" id="y17lo"/><exit cond="terminated" url="http://endlinks.researchnow.com/d/?status=2&amp;rnid=${rnid}&amp;study=${study}" id="Cfd2X"/><exit cond="overquota" url="http://endlinks.researchnow.com/d/?status=3&amp;rnid=${rnid}&amp;study=${study}" id="VvsJR"/><exit cond="qualified" url="http://endlinks.researchnow.com/d/?status=1&amp;rnid=${rnid}&amp;study=${study}" id="PpEAr"/></samplesource><samplesource list="0" id="deW6X"><title id="w3uVT">Open Survey</title><invalid id="QUlmR">You are missing information in the URL. Please verify the URL with the original invite.</invalid><completed id="ZqUr3">It seems you have already entered this survey.</completed><exit cond="terminated" id="QvIYm">Thank you for taking our survey.</exit><exit cond="qualified" id="upC6A">Thank you for taking our survey. Your efforts are greatly appreciated!</exit><exit cond="overquota" id="AiEQZ">Thank you for taking our survey.</exit></samplesource><samplesource list="2" id="GuDCl"><title id="SyFVA">neXus/DK</title><invalid id="DKgii">The unique number that tracks your progress through this survey is missing. To resume, please click the original link in the email we sent you.</invalid><completed id="Zn5Yh">It seems you have already entered this survey.</completed><var name="pid" required="1" id="knvdP"/><var name="psid" unique="1" id="dRkdo"/><var name="sp" id="EUI6a"/><var name="pp" id="mtokP"/><var name="sc" id="NhNUd"/><var name="ppid" id="Zfphq"/><exit cond="terminated and (hasMarker('speederAutoCheck') or hasMarker('speederAuto') )" url="//dkr1.ssisurveys.com/projects/end?rst=2&amp;psid=${psid}&amp;qflag=1" id="So8Ya"/><exit cond="terminated" url="//dkr1.ssisurveys.com/projects/end?rst=2&amp;psid=${psid}${'&amp;qflag=5' if hasMarker('lateScreenOut')  else ''}" id="epjSy"/><exit cond="overquota" url="//dkr1.ssisurveys.com/projects/end?rst=3&amp;psid=${psid}${'&amp;qflag=6' if hasMarker('lateQuotaFull')  else ''}" id="exKIx"/><exit cond="qualified" url="//dkr1.ssisurveys.com/projects/end?rst=1&amp;psid=${psid}${getDkSecStr()}${'&amp;compflag=2' if hasMarker('shortComplete') else '&amp;compflag=3' if hasMarker('longComplete')  else ''}" id="WFKR2"/></samplesource></samplesources><themes id="aHRac"><theme cond="p.rnPanelName == 'vop'" name="frozen:company/theme_vop" id="JR7C9"/><theme cond="p.rnPanelName == 'er'" name="frozen:company/theme_er" id="eQWuh"/><theme cond="p.rnPanelName == 'mmr'" name="frozen:company/theme_mmr" id="iKwyT"/><theme cond="list == '2'" name="frozen:company/theme_dk" id="PritK"/></themes><style cond="1" name="respview.client.css" id="kbt91">
&lt;style type="text/css"&gt;
    .autosave-restart { display: none; }
    .grid.grid-table-mode .col-legend { vertical-align: bottom; }
    .instruction-text{text-transform:uppercase; font-weight:bold; font-style: italic;}&lt;/style&gt;
</style><block label="blkSurveySettings" builder:title="Survey Settings" id="MKTsf"><note id="aDV79">Survey Defaults - need to be enabled on all projects</note><exec id="U1AYm">
try:
  panelSource.val = panelSource.attr('r%s' % src).index    
except Exception:
  panelSource.val = panelSource.r99.index
  
try:
  Country.val = Country.attr('r%s' % c).index
except Exception:
  pass

#DK variables
try:
  xsubPanel.val = xsubPanel.attr('r%s' % sp).index
except Exception:
  pass
  
try:
  xpanelPartner.val = xpanelPartner.attr('r%s' % pp).index
except Exception:
  pass
  </exec><radio label="panelSource" cond="tplShow()" multicol:count="5" optional="1" randomize="0" translateable="0" uses="multicol.7" where="execute,survey,notdp" id="GhKdp"><title id="WxMYj">Identifies which panel the respondent belongs to</title><row label="r1" value="1" id="NIf2V">VOP UK (United Kingdom)</row><row label="r2" value="2" id="H2txJ">VOP FR (France)</row><row label="r3" value="3" id="Jh73V">VOP IT (Italy)</row><row label="r4" value="4" id="P4EAa">VOP DE (Germany)</row><row label="r5" value="5" id="YKbFG">VOP ES (Spain)</row><row label="r6" value="6" id="RLGj8">VOP AU (Australia)</row><row label="r7" value="7" id="Z5qGx">VOP AT (Austria)</row><row label="r8" value="8" id="O6cCE">VOP NO (Norway)</row><row label="r9" value="9" id="tbV7j">VOP PL (Poland)</row><row label="r10" value="10" id="G6aot">VOP RU (Russia)</row><row label="r11" value="11" id="okSDt">VOP IE (Ireland)</row><row label="r12" value="12" id="lCmHG">VOP CH (Switzerland) - German</row><row label="r13" value="13" id="kqTP9">VOP DK (Denmark)</row><row label="r14" value="14" id="CqLCH">VOP FI (Finland)</row><row label="r15" value="15" id="odaMI">VOP SE (Sweden)</row><row label="r16" value="16" id="ZuSG0">VOP NL (Netherlands)</row><row label="r17" value="17" id="NiaAn">VOP GR (Greece)</row><row label="r18" value="18" id="gemNm">VOP BE (Belgium) - Dutch</row><row label="r19" value="19" id="ygj3x">VOP CZ (Czech Rep)</row><row label="r20" value="20" id="qMflE">VOP PT (Portugal)</row><row label="r21" value="21" id="qJvfD">VOP HU (Hungary)</row><row label="r22" value="22" id="U0oys">VOP USA (United States) - English</row><row label="r23" value="23" id="reD4F">VOP BR (Brazil)</row><row label="r24" value="24" id="iqYwW">VOP USA (United States) - Spanish</row><row label="r25" value="25" id="uveX1">VOP BE (Belgium) - French</row><row label="r26" value="26" id="ox0Rw">VOP CH (Switzerland) - French</row><row label="r27" value="27" id="bBjon">VOP CH (Switzerland) - Italian</row><row label="r28" value="28" id="fMQUW">VOP CH (Switzerland) - English</row><row label="r29" value="29" id="udqoJ">VOP NZ (New Zealand) - English</row><row label="r30" value="30" id="ak98N">VOP ME (Mexico)</row><row label="r31" value="31" id="KvPuX">VOP IN (India)</row><row label="r32" value="32" id="RgMHq">VOP CN (China)</row><row label="r33" value="33" id="hAoNb">VOP SING (Simplified Chinese)</row><row label="r34" value="34" id="iVvXs">VOP CHIL</row><row label="r35" value="35" id="C3y90">VOP SING (English)</row><row label="r36" value="36" id="oEcUE">VOP ARG</row><row label="r37" value="37" id="OC1sK">VOP CAN (Canada) - English</row><row label="r38" value="38" id="RxfDa">VOP CAN (Canada) - French</row><row label="r39" value="39" id="QrUCu">VOP JAP (Japan)</row><row label="r40" value="40" id="ZEEsK">VOP SKOR (South Korea)</row><row label="r41" value="41" id="t3iX9">Mum's Opinions</row><row label="r42" value="42" id="XcEqK">VOP South Africa</row><row label="r43" value="43" id="dOQ8H">B2B UK</row><row label="r44" value="44" id="aEqEI">Research Now</row><row label="r45" value="45" id="Ek0XA">VOP HK (Chinese)</row><row label="r46" value="46" id="n0KEY">VOP HK (English)</row><row label="r47" value="47" id="dtJAT">VOP Taiwan</row><row label="r48" value="48" id="BPxNm">VOP Malaysia (Malay)</row><row label="r49" value="49" id="PUvOB">VOP Malaysia (English)</row><row label="r50" value="50" id="Rcaej">E-Rewards (English)</row><row label="r51" value="51" id="eTKjD">E-Rewards (Germany)</row><row label="r52" value="52" id="VZ6pi">E-Rewards (Spain)</row><row label="r53" value="53" id="epuKF">E-Rewards (France)</row><row label="r54" value="54" id="vmXVa">E-Rewards (Netherlands)</row><row label="r55" value="55" id="xdpBy">E-Rewards (Portugal)</row><row label="r56" value="56" id="CXrVj">E-Rewards MMR</row><row label="r57" value="57" id="LQ8Xw">E-Rewards UTB (English)</row><row label="r58" value="58" id="UM38Y">E-Rewards (Canada-French)</row><row label="r59" value="59" id="KgPBi">E-Rewards (US-Spanish)</row><row label="r60" value="60" id="tWwos">E-Rewards (Mexico-Spanish)</row><row label="r61" value="61" id="E80on">Webmiles DE</row><row label="r62" value="62" id="nelpX">Swiss Webmiles DE</row><row label="r63" value="63" id="qppJU">Swiss Webmiles FR</row><row label="r64" value="64" id="jK9sG">VOP Indonesia</row><row label="r65" value="65" id="UMncN">VOP Thailand</row><row label="r66" value="66" id="kFm6I">VOP Turkey</row><row label="r67" value="67" id="TJl3u">E-Miles</row><row label="r68" value="68" id="mNDm1">Peanut Labs</row><row label="r69" value="69" id="U2XTy">AirMiles</row><row label="r70" value="70" id="WIRPs">Lightspeed North America</row><row label="r71" value="71" id="VieRD">Lightspeed Australia</row><row label="r72" value="72" id="nJsPY">Lightspeed Europe</row><row label="r73" value="73" id="IwCwe">eRewards</row><row label="r74" value="74" id="WjE7U">ePocrates</row><row label="r75" value="75" id="WKMka">Leger</row><row label="r76" value="76" id="tw4Pl">ToLuna</row><row label="r77" value="77" id="P3k5g">MedSite</row><row label="r78" value="78" id="cN550">Ipsos</row><row label="r79" value="79" id="EYjhF">Pureprofile</row><row label="r80" value="80" id="DXVBR">Ticketekrewards</row><row label="r81" value="81" id="sAcK2">veda advantage</row><row label="r82" value="82" id="O2p2d">aussie survey</row><row label="r83" value="83" id="eWpiG">Ciao</row><row label="r84" value="84" id="r5lrK">Greenfield</row><row label="r85" value="85" id="M9gbb">Livra</row><row label="r86" value="86" id="QIqyJ">AIP</row><row label="r87" value="87" id="lfwY4">GFK</row><row label="r88" value="88" id="IBNtf">CINT</row><row label="r89" value="89" id="mWSvM">Livra</row><row label="r90" value="90" id="XICVD">Debrand 1</row><row label="r91" value="91" id="IPLin">Debrand 2</row><row label="r92" value="92" id="Nnj6j">Debrand 3</row><row label="r93" value="93" id="gPCrU">Debrand 4</row><row label="r94" value="94" id="Rxh1M">Debrand 5</row><row label="r95" value="95" id="lPB1m">Debrand 6</row><row label="r96" value="96" id="fFJ9J">Debrand 7</row><row label="r97" value="97" id="o6lov">Debrand 8</row><row label="r98" value="98" id="GCoi3">Debrand 9</row><row label="r99" value="99" id="kgg9h">CATCH ALL</row><row label="r101" value="101" id="ZL2Pq">Nectar Canvass</row><row label="r560" value="560" id="tNW6A">MMR (EN_UK)</row><row label="r561" value="561" id="caQEG">MMR (EN_CA)</row><row label="r562" value="562" id="D9505">MMR (FR_CA)</row><row label="r563" value="563" id="UHLLh">MMR (DE_DE)</row><row label="r564" value="564" id="sw13l">MMR (FR_FR)</row><row label="r565" value="565" id="ak7ed">MMR (IT_IT)</row><row label="r566" value="566" id="U1XrZ">MMR (ES_ES)</row><row label="r731" value="731" id="icPTG">ERI Nectar</row></radio><radio label="Country" cond="tplShow()" multicol:count="5" optional="1" randomize="0" translateable="0" uses="multicol.7" where="execute,survey,report" id="bIAPq"><title id="XA7kK">Country from URL</title><row label="r1" id="ikSoW">UK</row><row label="r2" id="qrceN">USA</row><row label="r3" id="N762D">France</row><row label="r4" id="SquAb">Italy</row><row label="r5" id="jLlp4">Germany</row><row label="r6" id="UQlg1">Spain</row><row label="r7" id="WaaMt">Sweden</row><row label="r8" id="kHLs6">Denmark</row><row label="r9" id="gP7Sa">Norway</row><row label="r10" id="W2NUN">Greece</row><row label="r11" id="DyfXf">Hungary</row><row label="r12" id="rtVCG">Czech Republic</row><row label="r13" id="HbJxo">Poland</row><row label="r14" id="vbST3">Russia</row><row label="r15" id="FN3dy">South Korea</row><row label="r16" id="p0phi">Thailand</row><row label="r17" id="qnrYU">UK (Welsh)</row><row label="r18" id="S88kw">Ireland</row><row label="r19" id="pD38l">Australia</row><row label="r20" id="IerU8">China</row><row label="r21" id="XjsEl">Japan</row><row label="r22" id="pWpFv">Austria</row><row label="r23" id="jkbJ5">India</row><row label="r24" id="Lfr3T">Turkey</row><row label="r25" id="PvKac">UAE</row><row label="r26" id="PucnH">Argentina</row><row label="r27" id="mGbkG">Brazil</row><row label="r28" id="TuOUH">Venezuela</row><row label="r29" id="Z839M">Columbia</row><row label="r30" id="Jr9bt">Switzerland</row><row label="r31" id="oyoRD">Portugal</row><row label="r32" id="kFABp">Canada</row><row label="r33" id="YOpVo">Mexico</row><row label="r34" id="uUinH">Malaysia</row><row label="r35" id="pPlDN">South Africa</row><row label="r36" id="TGHeJ">Tunisia</row><row label="r37" id="Vku8N">Belgium</row><row label="r38" id="FsqDW">Netherlands</row><row label="r39" id="w6umL">Israel</row><row label="r40" id="qV6Q9">Saudi Arabia</row><row label="r41" id="oSXAy">Finland</row><row label="r42" id="ZPTJa">New Zealand</row><row label="r43" id="G46Mo">Singapore</row><row label="r44" id="wkewa">Chile</row><row label="r45" id="bYwfJ">Taiwan</row><row label="r46" id="UqcLG">Hong Kong</row><row label="r47" id="j9778">Indonesia</row></radio><radio label="xsubPanel" cond="tplShow()" multicol:count="5" optional="1" randomize="0" translateable="0" uses="multicol.7" where="execute,survey,notdp" id="CNuoP"><title id="rSq0g">DK sub panel. Please add the sub pannels that will be used in this survey.</title><row label="r0" value="0" id="u9taJ">Respondents without sub panel</row><row label="r1" value="1" id="mGgZQ">Member of any sub-panel</row></radio><radio label="xpanelPartner" cond="tplShow()" multicol:count="5" optional="1" randomize="0" translateable="0" uses="multicol.7" where="execute,survey,notdp" id="dOFxb"><title id="AN1jc">DK panel partner. Please add the panel partners that will be used in this survey.</title><row label="r0" value="0" id="jpcFO">No external sample provider used</row><row label="r1" value="1" id="Ix5gV">SSI (ePanel)</row></radio><radio label="dTrack" cond="tplShow()" optional="1" translateable="0" where="execute,survey,report,notdp" id="JUVNh"><title id="Yd285">project Version</title><row label="r0" value="0" id="MYPSm">No Changes</row><row label="r1" value="1" id="p14Gi">Fix in Q112a</row><row label="r2" value="2" id="gTEeP">fix condition for Daypart</row><row label="r3" value="3" id="UXgyN">Change 3</row><row label="r4" value="4" id="VlRIT">Change 4</row><row label="r5" value="5" id="BZQT1">Change 5</row><row label="r6" value="6" id="Udia3">Change 6</row><row label="r7" value="7" id="BNGnB">Change 7</row><row label="r8" value="8" id="LvphG">Change 8</row><row label="r9" value="9" id="H2On4">Change 9</row><row label="r10" value="10" id="lca1N">Change 10</row><row label="r11" value="11" id="WTaut">Change 11</row></radio><exec id="aLASM">
#######################################
# Update punch and row text for Live Changes
#######################################

#dTrack.val = dTrack.r0.index 
dTrack.val = dTrack.r1.index
p.tmp = ''
  </exec><suspend id="bW4ii"/></block><quota overquota="noqual" sheet="Overall" id="riJqH"/><suspend id="ujMQN"/><note id="h5SKl">RML6 Config</note><block label="b99" builder:title="RML6 Config" id="nCpWB"><exec when="init" id="Yay50">
order_id = 'ORD-12345-ABCD'
project_id = gv.survey.path

#RML6 Config
# Gets the Email Address of receiving the RML Error Report
# @returns {string}
def RML6ErrorReportEmail():
  return 'RMLWW@researchnow.com'

# Gets the Error message when tool gets error
# @returns {string}
def RML6ErrorMessageForUsers():
  return 'Sorry, an error happened. Please try again later.'

# Gets the server id
# @returns {string}
def getServerId():
  sid = '100' 
  curHost = gv.request.getFirstHeader('x-forwarded-host')
  if curHost:
    if curHost.find('survey-d.') &gt; -1:
      sid = '101'
    elif curHost.find('survey-ca.') &gt; -1:
      sid = '102'
    elif curHost.find('survey-au.') &gt; -1:
      sid = '103'
    elif curHost.find('survey-uk.') &gt; -1:
      sid = '104'
  return sid
  
# Gets the URL of the RML reporting suite
# @returns {string}
def RML6ToolUsageUrl():
    return '//surveytools.researchnow.com/rsntools/rnd/apis/latest/monitoring/latest/rml/usage?ss=' + getServerId() + '&amp;pnum=' + gv.survey.path + '&amp;respid=' + uuid
    
#Gets the URL of the RML reporting suite
# @returns {string}
def RML6ErrorReportUrl():
   return '//survey-na.researchnow.com/wix2/p1197220453.aspx?email=' + RML6ErrorReportEmail() + '&amp;pid=' + gv.survey.path + '&amp;rid=' + uuid + '&amp;lang=' + decLang

#Determines whether the survey is being run in live or test mode
# @returns {Boolean}
def IsTest():
  return gv.isUser() and not gv.debug.respview

#Determines whether the survey is being run in live or test mode
# @returns {Boolean}
def initRMLDataToggle():
  output = "\n"
  if IsTest():
    output += "var dataToggler = jQueryRML6('&lt;div&gt;Please click here to see the data nodes for this tool.&lt;/div&gt;');\n"
    output += "dataToggler.addClass('dataToggle');\n"
    output += "dataToggler.css({'text-decoration': 'underline','font-size': 'small','color': 'blue','cursor': 'pointer','margin-top': '20px'});\n"
    output += "var rmlDataShown = true;\n"
    output += "var toggleRMLData = function(){\n"
    output += "    rmlDataShown = !rmlDataShown;\n"
    output += "    if (rmlDataShown)\n"
    output += "    {\n"
    output += "      jQueryRML6.each(surveyQuestionObj.questions, function(index,item){\n"
    output += "        if (index !== 'id'){\n"
    output += "          if (index == 'Main'){\n"
    output += "            item.obj.show();\n"
    output += "            return true; //skip to next question\n"
    output += "          } else {\n"
    output += "            item.obj.siblings().show();\n"
    output += "            item.obj.show();\n"
    output += "          }\n"
    output += "        }\n"
    output += "      });\n"
    output += "    }\n"
    output += "    else\n"
    output += "    {\n"
    output += "      jQueryRML6.each(surveyQuestionObj.questions, function(index,item){\n"
    output += "        if (index !== 'id'){\n"
    output += "          if (index == 'Main'){\n"
    output += "            item.obj.hide();\n"
    output += "            return true; //skip to next question\n"
    output += "          } else {\n"
    output += "            item.obj.siblings().hide();\n"
    output += "            item.obj.hide();\n"
    output += "          }\n"
    output += "        }\n"
    output += "      });\n"
    output += "    }\n"
    output += "};\n"
    output += "rmlObj.rmlStage.after(dataToggler);\n"
    output += "dataToggler.click(toggleRMLData);\n"
    output += "toggleRMLData();\n"
    return output
  else:
    output += "jQueryRML6.each(surveyQuestionObj.questions, function(index,item){\n"
    output += "  if (index !== 'id'){\n"
    output += "    if (index == 'Main'){\n"
    output +=  "      item.obj.hide();\n"
    output += "      return true; //skip to next question\n"
    output +=  "    } else {\n"
    output += "       item.obj.siblings().hide();\n"
    output +=  "      item.obj.hide();\n"
    output +=  "    }\n"
    output += "  }\n"
    output += "});\n"
    return output
    
# Get a timestamp to append at the end of JS file urls, to avoid caching issues.
# @returns {Number}
def getTimeStamp():
    return time.time()
    
#Takes an error question and an error ID
#Checks to see if that question contains that ID
#If it does, returns that error (can be translated)
#If not, returns default RML server error message

def getRMLMessage(errorDummy,errorID):

    if eval(errorDummy+"."+errorID+".text"):                        #If the text object of 'errorDummy' returns true (has content)
        errorStr = "\"${"+ errorDummy +"."+ errorID +".text}\""     #Get that text, and put it into 'errorStr'
    else:                                                           #Otherwise...
        errorStr = "\"&lt;*"+errorID+"*&gt;\""                      #Return the errorID (default) RML error message

    return errorStr                                                 #Returns final answer
  </exec><radio label="hRML6ErrMsg" cond="False" noTranslate="comment,title" optional="1" randomize="0" where="execute,survey,report" id="jZdI8"><title id="JluqM">RML6 Error Messages</title><row label="r1" id="NdGFJ">Please make sure all the items have been answered</row><row label="r2" id="ksgm3">Please finish watching the video before you proceed</row></radio></block><note id="iYCSA">Start = Questionnaire</note><block label="quota_count" id="PhI3y"><exec id="mk6Oj">
cells = gv.survey.root.quota.getQuotaCells()
for i in dDaypartcurrentquota.rows:
    current, limit, overquota = cells["/Dayparts/dfinalDaypart.{}".format(i.label)]
    i.val = current


for i in dDayXDaypartcurrentquota.rows:
    for x in i:
       current, limit, overquota = cells["/DayXDayparts/{}/HQ123daypart.r{}".format(i.text,x.label[1:])]
       x.val = current
  </exec><text label="dDaypartcurrentquota" translateable="0" where="execute,survey,report" id="kCKgX"><title id="YP22N">Overall current count of Daypart quota</title><comment id="psm1f">Please be as specific as possible</comment><row label="r1" id="d6us1">Morning</row><row label="r2" id="hFCD0">Afternoon</row><row label="r3" id="I9PDr">Evening</row></text><text label="dDayXDaypartcurrentquota" translateable="0" where="execute,survey,report" id="in3FK"><title id="IurAi">Overall current count of Day X Daypart quota</title><comment id="Nh6Xg">Please be as specific as possible</comment><col label="c1" id="UYlZ1">Morning</col><col label="c2" id="TjLaZ">Afternoon</col><col label="c3" id="uZKY9">Evening</col><row label="r1" id="I9kju">Monday</row><row label="r2" id="IU7U9">Tuesday</row><row label="r3" id="S8qMQ">Wednesday</row><row label="r4" id="HrDCO">Thursday</row><row label="r5" id="AGSYY">Friday</row><row label="r6" id="L2Qpj">Saturday</row><row label="r7" id="Av3yg">Sunday</row></text><suspend id="Qed4X"/></block><radio label="Sc1" id="VS2mG"><title id="lpaqn">Are you male or female?</title><comment id="Ai3DB">Select one</comment><row label="r1" value="1" id="xxoDO">Male</row><row label="r2" value="2" id="eKIuI">Female</row></radio><suspend id="XVOwd"/><number label="Sc2" optional="0" size="3" ss:postText="years" ss:preText="" verify="range(1,99)" id="kdyIi"><title id="h1l0J">How old are you?</title><comment id="nYPdv">WRITE IN ONE NUMBER</comment><style name="question.after" wrap="ready" id="lhGOx">
$ (':text').attr('maxlength','2');
</style></number><suspend id="nqwbl"/><radio label="dSc2" optional="1" translateable="0" where="execute,survey,report" id="d6pF0"><title id="KdJke">Age range based on Sc2</title><comment id="Tjavi">Select one</comment><exec id="vJuJG">
agerange = ['14-24','25-34','35-44','45-54','55-64','65-70']

for count,i in enumerate(agerange):
    if Sc2.check(i):
        dSc2.val = count
  </exec><row label="r1" value="1" id="Gxvc6">14-24</row><row label="r2" value="2" id="CIsMX">25-34</row><row label="r3" value="3" id="Q3lCE">35-44</row><row label="r4" value="4" id="ojdRi">45-54</row><row label="r5" value="5" id="aXoky">55-64</row><row label="r6" value="6" id="ZLOeN">65-70</row></radio><suspend id="ROCG1"/><term cond="Sc2.val lt 14 or Sc2.val gt 70" id="xuD80">Sc2: MUST BE 14-70 TO CONTINUE</term><quota overquota="noqual" sheet="Gender" id="xVnNK"/><quota overquota="noqual" sheet="Age" id="TB7yy"/><checkbox label="Sc3" atleast="1" id="Bymry"><title id="toZK4">Do you, or does anyone in your household work for any of the following types of businesses or occupations?</title><comment id="AoFKQ">Select all that apply</comment><row label="r1" id="RRc4E">Advertising agency or public relations firm</row><row label="r2" id="uQKk8">Bank or other financial institution</row><row label="r3" id="ovJnR">Market research or marketing department or company</row><row label="r4" id="y1rAM">Manufacturer, distributor or seller of food products</row><row label="r5" id="Wndgj">Telephone or mobile phone service provider</row><row label="r6" id="QFcm4">Auto supplies manufacturing or retail sales</row><row label="r7" exclusive="1" randomize="0" id="o1tO6">None of these</row></checkbox><suspend id="E1TX4"/><term cond="Sc3.r1 or Sc3.r3 or Sc3.r4" id="Z0geS">Sc3 : Term if Advertising agency or public relations firm, Market research or marketing department or company or Manufacturer, distributor or seller of food products</term><radio label="Sc4" id="UqTAu"><title id="Mh2vR">Are you currently following a diet that is highly restrictive, or has you eating in a way that is not typical for you (e.g., body cleanse, shake-based program, etc.)?</title><comment id="VWUhE">Select one</comment><row label="r1" value="1" id="LtWHD">Yes</row><row label="r2" value="2" id="uJMPv">No</row></radio><suspend id="xgrsq"/><term cond="Sc4.r1" id="xrDmB">Sc4: Term if Yes</term><checkbox label="Sc5" atleast="1" id="HyYr9"><title id="lA4w1">Which of the following foods have you eaten in the past week?</title><comment id="bOGyU">Select all that apply</comment><row label="r1" id="F42PW">Potato, tortilla or corn chips, such as Lay's, Fritos or Tostitos</row><row label="r2" id="BJXZL">Yogurt, such as Dannon or Oikos</row><row label="r3" id="WK9fc">Pre-packaged snack cakes, muffins, donuts, pies, etc. (e.g., Little Debbie, Hostess)</row><row label="r4" id="uXMD5">Hot appetizers like pizza rolls, sandwich pockets, such as Totinos or Hot Pockets</row><row label="r5" exclusive="1" randomize="0" id="vl1C1">None of these</row></checkbox><suspend id="gxc6d"/><html label="intro1" where="survey" id="wJR0u">We'd like you to think about your day yesterday, and all the times you ate something - either a "traditional" meal or a snack.&lt;br /&gt;
&lt;br /&gt;
&lt;p style="margin-left:15px;"&gt;A "traditional" meal is generally composed of several different foods, tends to be more filling, and takes a bit more time to eat.&lt;/p&gt; &lt;br /&gt;
&lt;br /&gt;
&lt;p style="margin-left:15px;"&gt;A snack is something you eat between meals, or right after a meal, or even instead of a "traditional" meal - like if you're grazing all day, or grabbing food to eat on the run.&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p style="margin-left:15px;"&gt;A snack can encompass all types of food &#8230; It can be a:&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;ul&gt;

&lt;li style="margin-left:3px;" /&gt;Savory food like chips or nuts
&lt;li style="margin-left:3px;" /&gt;Sweet treat, like candy, ice cream or a baked sweet (cookies, cakes, muffins)
&lt;li style="margin-left:3px;" /&gt;Natural food like fruit, veggies or cheese
&lt;li style="margin-left:3px;" /&gt;Beverage such as a smoothie
&lt;li style="margin-left:3px;" /&gt;More substantial food like pizza, hot pockets - as long as it wasn't eaten for a "traditional" meal
&lt;/ul&gt;&lt;br /&gt;</html><suspend id="oCyjo"/><number label="Sc6a" optional="0" size="3" verify="range(0,9)" id="EZU4n"><title id="NvEMw">With this in mind, how many times did you eat a "traditional" meal yesterday?</title><comment id="fdX8N">WRITE IN ONE NUMBER</comment><style name="question.after" wrap="ready" id="hSvYe">
$ (':text').attr('maxlength','1');
    $ (':text').attr('size','1');
</style></number><suspend id="DPIOG"/><number label="Sc6b" optional="0" size="3" verify="range(0,99)" id="QX4s6"><title id="iXtJe">And how many times did you snack yesterday?</title><comment id="v83ov">WRITE IN ONE NUMBER</comment><style name="question.after" wrap="ready" id="ADP5L">
$ (':text').attr('maxlength','2');
    $ (':text').attr('size','2');
</style></number><suspend id="bU4Sm"/><term cond="Sc6b.ival gt 10 or (Sc6b.ival == 0 and not (Sc5.r3))" id="V7UDO">Sc6b: Response is greater than 0 or Sc6b=0 AND CODE 3 IN Sc5 IS NOT SELECTED</term><radio label="dumSc7cFlagger" optional="1" where="execute,survey,report" id="A1T3T"><title id="BvTgc">Auto Code snack ch19 Branded pre-packaged snack cakes, muffins, donuts, pies, etc. (e.g., Little Debbie, Hostess)</title><exec id="of0nj">
dumSc7cFlagger.val = dumSc7cFlagger.r0.index
if Sc6b.ival == 0 and Sc5.r3:
    dumSc7cFlagger.val = dumSc7cFlagger.r1.index
  </exec><row label="r1" value="1" id="t50nb">Yes</row><row label="r0" value="0" id="yYwr4">No</row></radio><suspend id="MyStm"/><radio label="Sc7a" cond="Sc6b.val gt 0" optional="1" where="execute,survey,report" id="vEMic"><title id="WLn3L">And what day of the week was this (yesterday)?</title><comment id="DUHQ8">Select one</comment><exec id="aeJZ6">
from datetime import datetime, timedelta
fmt = '%m/%d/%Y %H:%M'


today = datetime.strptime(start_date.unsafe_val,fmt) - timedelta(days = 1)
Sc7a.val = today.weekday()
  </exec><row label="r1" value="1" id="Ibx55">Monday</row><row label="r2" value="2" id="Xx3t0">Tuesday</row><row label="r3" value="3" id="MoBjK">Wednesday</row><row label="r4" value="4" id="oSKEZ">Thursday</row><row label="r5" value="5" id="OV6PR">Friday</row><row label="r6" value="6" id="PGbf8">Saturday</row><row label="r7" value="7" id="IXhsJ">Sunday</row></radio><suspend id="M0pkT"/><block label="Sc7_block" cond="Sc6b.ival gt 0" id="Z6SmE"><select label="Sc7b" rowCond="(row.index + 1) le Sc6b.ival" id="Nda0B"><title id="Hjdru">Please indicate the time of day you had each of these snacks</title><comment id="yZC0c">SELECT ONE FOR EACH SNACK OCCASION.  </comment><row label="r1" value="1" id="TX2lg">SNACK OCCASION #1</row><row label="r2" value="2" id="pxEdY">SNACK OCCASION #2</row><row label="r3" value="3" id="oUBL9">SNACK OCCASION #3</row><row label="r4" value="4" id="Y2Ywp">SNACK OCCASION #4</row><row label="r5" value="5" id="ohleD">SNACK OCCASION #5</row><row label="r6" value="6" id="vG1g6">SNACK OCCASION #6</row><row label="r7" value="7" id="UyFxj">SNACK OCCASION #7</row><row label="r8" value="8" id="eZKxZ">SNACK OCCASION #8</row><row label="r9" value="9" id="rNn2Q">SNACK OCCASION #9</row><row label="r10" value="10" id="ZggXj">SNACK OCCASION #10</row><choice label="ch1" id="ay1Yc">Early morning (5am - 7am)</choice><choice label="ch2" id="OZqPN">Morning (7am-10am)</choice><choice label="ch3" id="K3vEQ">Late morning (10am-noon)</choice><choice label="ch4" id="qrCZY">Early afternoon (noon - 3pm)</choice><choice label="ch5" id="W4GH0">Late afternoon (3pm-6pm)</choice><choice label="ch6" id="uNbEg">Evening (6pm-9pm)</choice><choice label="ch7" id="f3aua">Late evening (9pm-midnight)</choice><choice label="ch8" id="ORs70">Overnight (midnight - 5am)</choice></select><suspend id="nLp5t"/><exec when="init" id="S2xIB">
def dOrder_func(gHiddens,fromQ,sClass,deli,condition="displayed"):
    founded = []
    p.allgroups = {}
    for i in gHiddens.order:
        if i.group.label not in founded:
            if condition == 'displayed':
                if fromQ[i.index].displayed:
                    founded.append(i.group.label)
                    p.allgroups[i.group.label] = {'title': i.group.text,
                    'insertTo':""+sClass+i.label[deli:],
                    'mgroup':i.group.label[1:]}
                    continue
            if condition == 'any':
                if fromQ[i.index].any:
                    founded.append(i.group.label)
                    p.allgroups[i.group.label] = {'title': i.group.text,
                    'insertTo':""+sClass+i.label[deli:],
                    'mgroup':i.group.label[1:]}
                    continue
            if condition == 'copy':
                founded.append(i.group.label)
                p.allgroups[i.group.label] = {'title': i.group.text,
                'insertTo':""+sClass+i.label[deli:],
                'mgroup':i.group.label[1:]}
                continue
    return p.allgroups;
  </exec><select label="Sc7c" rowCond="(row.index + 1) le Sc6b.ival" shuffle="groups,choices" ss:questionClassNames="skipAutosize" uses="separator.5" id="dlH4R"><title id="v333q">Using the drop down lists, please indicate which foods you ate on this occasion.
&lt;br /&gt;&lt;br /&gt;
If you ate more than one food item, record each different food in a separate drop down box.
</title><validate id="OfmD4">
for i in Sc7c.rows:
    if i.displayed:
       for x in i:
          if x.val in [Sc7c.ch52.index] and i.count gt 1:
              error(res.Sc7cc5052,i)
          for j in i:
              if x.index != j.index:
                 if j.any and not(x.any) and x.index lt j.index:
                    error(res.Sc7cSequence,i)
                 if (x.any and j.any) and (x.val == j.val):
                     error(res.Sc7cDup,row=i,col=j)
    </validate><style name="question.after" id="DM7oJ">
&lt;style&gt;
tr.row-group th.row-legend{min-width:150px;background:#4773A6;color:white;}
.grow{
    color:white;
    
}
tr.row-elements th.cell{
    background-color:#4773A6;
}

.c50, .c52{
  
    margin-left:-40px;
    font-weight:bold;
}


&lt;/style&gt;
</style><group label="g1" id="QxaqL">Fruit / Vegetable Based</group><group label="g2" id="PPI5t">Dairy / Smoothies</group><group label="g3" id="ZlDeM">Bars</group><group label="g4" id="iYlqQ">Sweet Foods</group><group label="g5" id="PsZLA">Salty Snacks / Crackers</group><group label="g6" id="o8Ani">Nuts / Seeds / Grains</group><group label="g7" id="JeUwF">Other Foods</group><group label="gc1" id="Nxiyj">&lt;b&gt;SNACK OCCASION #1&lt;/b&gt;</group><group label="gc2" id="cluB0">&lt;b&gt;SNACK OCCASION #2&lt;/b&gt;</group><group label="gc3" id="ocwjv">&lt;b&gt;SNACK OCCASION #3&lt;/b&gt;</group><group label="gc4" id="bFxJY">&lt;b&gt;SNACK OCCASION #4&lt;/b&gt;</group><group label="gc5" id="K5t0u">&lt;b&gt;SNACK OCCASION #5&lt;/b&gt;</group><group label="gc6" id="y37Mi">&lt;b&gt;SNACK OCCASION #6&lt;/b&gt;</group><group label="gc7" id="h3rRM">&lt;b&gt;SNACK OCCASION #7&lt;/b&gt;</group><group label="gc8" id="fs3kl">&lt;b&gt;SNACK OCCASION #8&lt;/b&gt;</group><group label="gc9" id="AGkgH">&lt;b&gt;SNACK OCCASION #9&lt;/b&gt;</group><group label="gc10" id="vXv7Y">&lt;b&gt;SNACK OCCASION #10&lt;/b&gt;</group><group label="g8" randomize="0" id="CQmUT"/><col label="c1" value="1" id="eoZuJ"/><col label="c2" optional="1" value="2" id="Yu5uc"/><col label="c3" optional="1" value="3" id="Cscqo"/><row label="r1" alt="SNACK OCCASION #1" groups="gc1" ss:rowClassNames="grow" id="GM2Aa">${Sc7b.choices[Sc7b.r1.val].text}</row><row label="r2" alt="SNACK OCCASION #2" groups="gc2" ss:rowClassNames="grow" id="rQPBY">${Sc7b.choices[Sc7b.r2.val].text}</row><row label="r3" alt="SNACK OCCASION #3" groups="gc3" ss:rowClassNames="grow" id="ukivF">${Sc7b.choices[Sc7b.r3.val].text}</row><row label="r4" alt="SNACK OCCASION #4" groups="gc4" ss:rowClassNames="grow" id="FlBSZ">${Sc7b.choices[Sc7b.r4.val].text}</row><row label="r5" alt="SNACK OCCASION #5" groups="gc5" ss:rowClassNames="grow" id="y8KNO">${Sc7b.choices[Sc7b.r5.val].text}</row><row label="r6" alt="SNACK OCCASION #6" groups="gc6" ss:rowClassNames="grow" id="T2gva">${Sc7b.choices[Sc7b.r6.val].text}</row><row label="r7" alt="SNACK OCCASION #7" groups="gc7" ss:rowClassNames="grow" id="T0dx9">${Sc7b.choices[Sc7b.r7.val].text}</row><row label="r8" alt="SNACK OCCASION #8" groups="gc8" ss:rowClassNames="grow" id="wmqNB">${Sc7b.choices[Sc7b.r8.val].text}</row><row label="r9" alt="SNACK OCCASION #9" groups="gc9" ss:rowClassNames="grow" id="FcZWF">${Sc7b.choices[Sc7b.r9.val].text}</row><row label="r10" alt="SNACK OCCASION #10" groups="gc10" ss:rowClassNames="grow" id="ONSyV">${Sc7b.choices[Sc7b.r10.val].text}</row><choice label="ch1" groups="g1" randomize="0" value="1" id="FlPfq">Fresh vegetables</choice><choice label="ch2" groups="g1" randomize="0" value="2" id="jjrBj">Dried vegetables</choice><choice label="ch3" groups="g1" randomize="0" value="3" id="VlhN5">Fresh fruit</choice><choice label="ch4" groups="g1" randomize="0" value="4" id="vQ5Pr">Dried fruit</choice><choice label="ch5" groups="g1" randomize="0" value="5" id="hSMql">Fruit cup / applesauce</choice><choice label="ch6" groups="g1" randomize="0" value="6" id="tytHV">Fruit snack (e.g., roll-ups)</choice><choice label="ch51" groups="g1" randomize="0" value="51" id="o9JoN">Salad</choice><choice label="ch7" groups="g2" randomize="0" value="7" id="fDdsj">Cheese / cheese sticks</choice><choice label="ch8" groups="g2" randomize="0" value="8" id="wlx5y">Cottage cheese</choice><choice label="ch9" groups="g2" randomize="0" value="9" id="xQ7Bs">Yogurt / yogurt drink</choice><choice label="ch10" groups="g2" randomize="0" value="10" id="cP6w3">Smoothie</choice><choice label="ch11" groups="g3" randomize="0" value="11" id="V3Gy8">Cereal / granola bar</choice><choice label="ch12" groups="g3" randomize="0" value="12" id="VtTgc">Fruit / nut bar</choice><choice label="ch13" groups="g3" randomize="0" value="13" id="YOHJa">Protein / nutrition / energy bar</choice><choice label="ch14" groups="g3" randomize="0" value="14" id="CHEku">Weight management bar</choice><choice label="ch15" groups="g4" randomize="0" value="15" id="swaa2">Donuts, danish, scones, coffee cake - from bakery or homemade</choice><choice label="ch16" groups="g4" randomize="0" value="16" id="XHNB1">Muffins - from bakery or homemade</choice><choice label="ch17" groups="g4" randomize="0" value="17" id="Seldp">Cake, pie, brownies - from bakery or homemade</choice><choice label="ch18" groups="g4" randomize="0" value="18" id="XfLr6">Cookies - from bakery or homemade</choice><choice label="ch19" groups="g4" randomize="0" value="19" id="p7DVO">Branded pre-packaged snack cakes, muffins, donuts, pies, etc. (e.g., Little Debbie, Hostess)</choice><choice label="ch20" groups="g4" randomize="0" value="20" id="ibpbF">Branded pre-packaged cookies (e.g., Oreos, Chips Ahoy)</choice><choice label="ch21" groups="g4" randomize="0" value="21" id="QwkUx">Toaster pastries</choice><choice label="ch22" groups="g4" randomize="0" value="22" id="w7FVE">Treat bars (e.g., Rice Krispie treats, S'mores)</choice><choice label="ch23" groups="g4" randomize="0" value="23" id="h3EeS">Non-chocolate candy</choice><choice label="ch24" groups="g4" randomize="0" value="24" id="ojLTi">Chocolate candy</choice><choice label="ch25" groups="g4" randomize="0" value="25" id="of07m">Gelatin</choice><choice label="ch26" groups="g4" randomize="0" value="26" id="XdSDl">Pudding</choice><choice label="ch27" groups="g4" randomize="0" value="27" id="VGPoh">Frozen yogurt / ice cream / other frozen treats</choice><choice label="ch28" groups="g5" randomize="0" value="28" id="xw0lO">Chips (e.g., potato, tortilla, corn, pita, etc.)</choice><choice label="ch29" groups="g5" randomize="0" value="29" id="ko9eg">Pretzels</choice><choice label="ch30" groups="g5" randomize="0" value="30" id="gi3p1">Popcorn</choice><choice label="ch31" groups="g5" randomize="0" value="31" id="ohJAK">Crackers</choice><choice label="ch32" groups="g5" randomize="0" value="32" id="Kc7Pa">Flavored / sandwich crackers (e.g., Ritz bits sandwiches, Cheez-Its, Goldfish)</choice><choice label="ch33" groups="g5" randomize="0" value="33" id="GrlOe">Rice cakes</choice><choice label="ch34" groups="g6" randomize="0" value="34" id="g0cIk">Almonds</choice><choice label="ch35" groups="g6" randomize="0" value="35" id="irBho">Other nuts (e.g., peanuts, pistachios, cashews)</choice><choice label="ch36" groups="g6" randomize="0" value="36" id="TOLvx">Seeds (e.g., sunflower, pumpkin)</choice><choice label="ch37" groups="g6" randomize="0" value="37" id="aEQwp">Trail mix</choice><choice label="ch38" groups="g6" randomize="0" value="38" id="IYEnE">Granola (loose, not in bar form)</choice><choice label="ch39" groups="g7" randomize="0" value="39" id="Qkgk1">Toast / bagel / pita / other bread product (not sandwich)</choice><choice label="ch40" groups="g7" randomize="0" value="40" id="l9BlW">Waffles / pancakes</choice><choice label="ch41" groups="g7" randomize="0" value="41" id="eQslc">Sandwich (hot or cold)</choice><choice label="ch42" groups="g7" randomize="0" value="42" id="AgtH4">Pizza</choice><choice label="ch43" groups="g7" randomize="0" value="43" id="kNS4D">Chicken nuggets / strips</choice><choice label="ch44" groups="g7" randomize="0" value="44" id="oOdDC">French fries / onion rings / tater tots</choice><choice label="ch45" groups="g7" randomize="0" value="45" id="EVfTW">Hot appetizer (e.g., pizza rolls, mozzarella sticks, hot pockets, egg rolls, wings, etc.)</choice><choice label="ch46" groups="g7" randomize="0" value="46" id="naehW">Cold / hot cereal</choice><choice label="ch47" groups="g7" randomize="0" value="47" id="cD0f2">Eggs</choice><choice label="ch48" groups="g7" randomize="0" value="48" id="eQOSY">Jerky / dried or cured meats</choice><choice label="ch49" groups="g7" randomize="0" value="49" id="Ri8Pc">Pre-packaged meal / snack packs (e.g., Lunchables)</choice><choice label="ch50" groups="g8" randomize="0" ss:choiceClassNames="c50" value="50" id="TCJHG">Other food not listed</choice><choice label="ch52" groups="g8" randomize="0" ss:choiceClassNames="c52" value="52" id="s7gyn">Don't recall what food I ate</choice></select><suspend id="Pv1ZX"/><exec id="Ekls5">
p.toTerm = 1
for i in Sc7c.rows:
    if i.displayed:
        for x in i:
           if x.val not in [Sc7c.ch50.index,Sc7c.ch52.index] and x.val != -1:
              p.toTerm = 0
              dSc7cquota1.attr(i.label).val = 1
  </exec><checkbox label="dSc7cquota1" optional="1" where="execute,survey,report" id="aD2uZ"><title id="C9slV">Qualified occasions not answered ch50 or ch52 only to all choices</title><comment id="BdSX7">Select all that apply</comment><row label="r1" id="sVP5g">Snack  occasions 1</row><row label="r2" id="RtCtT">Snack  occasions 2</row><row label="r3" id="swO3O">Snack  occasions 3</row><row label="r4" id="MeGpU">Snack  occasions 4</row><row label="r5" id="roBqZ">Snack  occasions 5</row><row label="r6" id="LSynU">Snack  occasions 6</row><row label="r7" id="J7m7G">Snack  occasions 7</row><row label="r8" id="xNJrh">Snack  occasions 8</row><row label="r9" id="Xv62B">Snack  occasions 9</row><row label="r10" id="EJBTo">Snack occasions  10</row></checkbox><suspend id="QJxr2"/><term cond="p.toTerm" id="aro6o">Sc7c:IF SC6B=1-10 AND SC7C=50 or 52 ONLY,</term></block><quota cond="Sc6b.val gt 0 and dSc7cquota1.count" overquota="noqual" sheet="hQ1_2LF" id="iF0uM"/><checkbox label="dSc7cquota" where="execute,survey,report" id="eMj2V"><title id="PdUVR">qualified occasions for ch19</title><comment id="HIwQB">Select all that apply</comment><exec id="Xc09Z">
for i in Sc7c.rows:
    for x in i:
         if x.ch19:
             dSc7cquota.rows[i.index].val = 1
  </exec><row label="r1" id="bR6lS">Snack  occasions 1</row><row label="r2" id="hmNqH">Snack  occasions 2</row><row label="r3" id="gDrhB">Snack  occasions 3</row><row label="r4" id="Ym0Vo">Snack  occasions 4</row><row label="r5" id="qHBQY">Snack  occasions 5</row><row label="r6" id="qkTpE">Snack  occasions 6</row><row label="r7" id="uZ6xW">Snack  occasions 7</row><row label="r8" id="RAjXg">Snack  occasions 8</row><row label="r9" id="o37fS">Snack  occasions 9</row><row label="r10" id="Dp475">Snack occasions 10</row></checkbox><suspend id="AmkYc"/><radio label="dSc7cgroup" optional="1" shuffle="rows" where="execute,survey,report" id="wG4Ci"><title id="X2Vvs">grouping</title><comment id="YraQh">Select one in each row</comment><exec id="bST4f">
theord = [x.index for x in Sc7c.choices.order]
dSc7cgroup.rows.order = theord

dOrder_func(Sc7c.choices,Sc7c.choices,'cr',2)
  </exec><style label="sc7corderstyle" name="question.after" wrap="ready" id="AgCC9">
var dGroup = ${p.allgroups}
for (var key in dGroup) {
  if (dGroup.hasOwnProperty(key))
    console.log(dGroup[key]);
    console.log($ ('.'+dGroup[key]['insertTo']).prepend('&lt;br/&gt;&lt;br/&gt;'+dGroup[key]['title']+'&lt;br/&gt;&lt;br/&gt;'))

}
</style><row label="r1" ss:rowClassNames="cr1" id="VSdHJ">Fresh vegetables</row><row label="r2" ss:rowClassNames="cr2" id="JEoL9">Dried vegetables</row><row label="r3" ss:rowClassNames="cr3" id="yJ4Op">Fresh fruit</row><row label="r4" ss:rowClassNames="cr4" id="tkUa9">Dried fruit</row><row label="r5" ss:rowClassNames="cr5" id="Z6ElX">Fruit cup / applesauce</row><row label="r6" ss:rowClassNames="cr6" id="P386M">Fruit snack (e.g., roll-ups)</row><row label="r51" ss:rowClassNames="cr51" id="L1j2b">Salad</row><row label="r7" ss:rowClassNames="cr7" id="BGGNq">Cheese / cheese sticks</row><row label="r8" ss:rowClassNames="cr8" id="qkrg4">Cottage cheese</row><row label="r9" ss:rowClassNames="cr9" id="BiJwu">Yogurt / yogurt drink</row><row label="r10" ss:rowClassNames="cr10" id="BLUJy">Smoothie</row><row label="r11" ss:rowClassNames="cr11" id="BthSv">Cereal / granola bar</row><row label="r12" ss:rowClassNames="cr12" id="fh4x5">Fruit / nut bar</row><row label="r13" ss:rowClassNames="cr13" id="wp4ee">Protein / nutrition / energy bar</row><row label="r14" ss:rowClassNames="cr14" id="VMpRQ">Weight management bar</row><row label="r15" ss:rowClassNames="cr15" id="MTXR6">Donuts, danish, scones, coffee cake - from bakery or homemade</row><row label="r16" ss:rowClassNames="cr16" id="AWDxw">Muffins - from bakery or homemade</row><row label="r17" ss:rowClassNames="cr17" id="lO2oi">Cake, pie, brownies - from bakery or homemade</row><row label="r18" ss:rowClassNames="cr18" id="y3Vcr">Cookies - from bakery or homemade</row><row label="r19" ss:rowClassNames="cr19" id="IsLWW">Branded pre-packaged snack cakes, muffins, donuts, pies, etc. (e.g., Little Debbie, Hostess)</row><row label="r20" ss:rowClassNames="cr20" id="o0gih">Branded pre-packaged cookies (e.g., Oreos, Chips Ahoy)</row><row label="r21" ss:rowClassNames="cr21" id="isy22">Toaster pastries</row><row label="r22" ss:rowClassNames="cr22" id="DFZ7s">Treat bars (e.g., Rice Krispie treats, S'mores)</row><row label="r23" ss:rowClassNames="cr23" id="xZ2NC">Non-chocolate candy</row><row label="r24" ss:rowClassNames="cr24" id="FoW0x">Chocolate candy</row><row label="r25" ss:rowClassNames="cr25" id="UHjSf">Gelatin</row><row label="r26" ss:rowClassNames="cr26" id="bhvGG">Pudding</row><row label="r27" ss:rowClassNames="cr27" id="SYLYc">Frozen yogurt / ice cream / other frozen treats</row><row label="r28" ss:rowClassNames="cr28" id="FaUyT">Chips (e.g., potato, tortilla, corn, pita, etc.)</row><row label="r29" ss:rowClassNames="cr29" id="yoDQL">Pretzels</row><row label="r30" ss:rowClassNames="cr30" id="SgckC">Popcorn</row><row label="r31" ss:rowClassNames="cr31" id="egdE4">Crackers</row><row label="r32" ss:rowClassNames="cr32" id="UG4WN">Flavored / sandwich crackers (e.g., Ritz bits sandwiches, Cheez-Its, Goldfish)</row><row label="r33" ss:rowClassNames="cr33" id="XOv2S">Rice cakes</row><row label="r34" ss:rowClassNames="cr34" id="TWiDH">Almonds</row><row label="r35" ss:rowClassNames="cr35" id="lFUuE">Other nuts (e.g., peanuts, pistachios, cashews)</row><row label="r36" ss:rowClassNames="cr36" id="BRyFp">Seeds (e.g., sunflower, pumpkin)</row><row label="r37" ss:rowClassNames="cr37" id="Zoq9q">Trail mix</row><row label="r38" ss:rowClassNames="cr38" id="e8SoG">Granola (loose, not in bar form)</row><row label="r39" ss:rowClassNames="cr39" id="d2Kmn">Toast / bagel / pita / other bread product (not sandwich)</row><row label="r40" ss:rowClassNames="cr40" id="ckwHa">Waffles / pancakes</row><row label="r41" ss:rowClassNames="cr41" id="xGnYB">Sandwich (hot or cold)</row><row label="r42" ss:rowClassNames="cr42" id="LHaPw">Pizza</row><row label="r43" ss:rowClassNames="cr43" id="OF9gR">Chicken nuggets / strips</row><row label="r44" ss:rowClassNames="cr44" id="ZHou1">French fries / onion rings / tater tots</row><row label="r45" ss:rowClassNames="cr45" id="LW1N3">Hot appetizer (e.g., pizza rolls, mozzarella sticks, hot pockets, egg rolls, wings, etc.)</row><row label="r46" ss:rowClassNames="cr46" id="Ki1hM">Cold / hot cereal</row><row label="r47" ss:rowClassNames="cr47" id="F6Vsw">Eggs</row><row label="r48" ss:rowClassNames="cr48" id="xoMtk">Jerky / dried or cured meats</row><row label="r49" ss:rowClassNames="cr49" id="s9C1v">Pre-packaged meal / snack packs (e.g., Lunchables)</row><row label="r50" ss:rowClassNames="cr50" id="GaaRV">Other food not listed</row><row label="r52" ss:rowClassNames="cr52" id="IQdmm">Don't recall what food I ate</row></radio><suspend id="pSaJh"/><quota cond="dSc7cquota.count" overquota="noqual" sheet="hQ1_1" id="aa34e"/><block label="Sc8a_b_block" cond="Sc6b.ival == 0 and Sc5.r3" id="NIoRE"><radio label="Sc8a" id="Bb6Ov"><title id="min4S">You said you ate a pre-packaged snack cake, muffin, donut, pie, etc. (e.g., Little Debbie, Hostess) in the past week.  To the best of your memory, what day of the week was this?</title><comment id="EVWQF">Select one</comment><row label="r1" value="1" id="SYEeQ">Monday</row><row label="r2" value="2" id="m5ILp">Tuesday</row><row label="r3" value="3" id="WAaZy">Wednesday</row><row label="r4" value="4" id="daRhj">Thursday</row><row label="r5" value="5" id="pFHrx">Friday</row><row label="r6" value="6" id="eagkB">Saturday</row><row label="r7" value="7" id="A7uLK">Sunday</row></radio><suspend id="MXHwV"/><radio label="Sc8b" id="xK1yI"><title id="o5YWN">And to the best of your memory, what time of day was it when you ate this item?</title><comment id="CsDOA">Select one</comment><row label="r1" value="1" id="HToKH">Early morning (5am - 7am)</row><row label="r2" value="2" id="sjHgL">Morning (7am-10am)</row><row label="r3" value="3" id="SWtUG">Late morning (10am-noon)</row><row label="r4" value="4" id="dt15v">Early afternoon (noon - 3pm)</row><row label="r5" value="5" id="XHg9m">Late afternoon (3pm-6pm)</row><row label="r6" value="6" id="KIhnk">Evening (6pm-9pm)</row><row label="r7" value="7" id="mr4UQ">Late evening (9pm-midnight)</row><row label="r8" value="8" id="ZuecB">Overnight (midnight - 5am)</row></radio><suspend id="ZrCjk"/></block><radio label="HQ1" optional="1" where="execute,survey,report" id="eGxfd"><title id="Vvdl9">PROGRAMMING NOTE:  HIDDEN QUESTION, PLEASE CATEGORIZE RESPONDENTS AS INDICATED</title><comment id="vc9Ey">Select one</comment><exec id="QBwTY">
if Sc6b.ival ge 1 and (dSc7cquota.count gt 0):
    HQ1.val = HQ1.r1.index
elif Sc6b.ival ge 1 and (dSc7cquota.count == 0):
    HQ1.val = HQ1.r2.index
elif Sc6b.ival lt 1 and Sc5.r3:
    HQ1.val = HQ1.r3.index
  </exec><row label="r1" value="1" id="SO3oB">Past day snack cake eaters</row><row label="r2" value="2" id="b8WKM">Random respondents, not past day snack cake eaters</row><row label="r3" value="3" id="kfWXr">Snack cake over-quota</row></radio><suspend id="FtJyT"/><exec cond="HQ1.r1 or HQ1.r2" id="cxCCM">
dfinalDay.val = Sc7a.val
</exec><exec cond="HQ1.r3" id="xG49w">
dfinalDay.val = Sc8a.val
</exec><radio label="dfinalDay" optional="1" where="execute,survey,report" id="fCkKA"><title id="YbDUf">final Day based with Sc7a if HQ1.r1 or 2 or Sc8a if HQ1.r3</title><comment id="rOyUd">Select one</comment><row label="r1" value="1" id="Gy0vK">Monday</row><row label="r2" value="2" id="nYKYF">Tuesday</row><row label="r3" value="3" id="EOD6f">Wednesday</row><row label="r4" value="4" id="rvOhQ">Thursday</row><row label="r5" value="5" id="qCB4m">Friday</row><row label="r6" value="6" id="iZx5r">Saturday</row><row label="r7" value="7" id="DW8kr">Sunday</row></radio><suspend id="Gxj2L"/><quota overquota="noqual" sheet="Day" id="uHIO2"/><quota overquota="noqual" sheet="DayXAge" id="Gk8SO"/><block label="HQ1_1daypart" cond="HQ1.r1" id="jDkDp"><checkbox label="HQ1_1dumDaypart" optional="1" where="execute,survey,report" id="MZcck"><title id="U7m5V">Qualified daypart based on Sc7c</title><comment id="Rjern">Select one</comment><exec id="NsQ9R">
listSnacks = [x.label for x in Sc7c.choices]
print listSnacks
for x in HQ1_1dumDaypart.rows:
    x.val = 0
for i in Sc7b.rows:
    if i.displayed:
        for g in Sc7c.attr(i.label):
            if g.val != None:
                if listSnacks[g.val] == 'ch19':
                    if i.val in [Sc7b.ch1.index,Sc7b.ch2.index,Sc7b.ch3.index]:
                        HQ1_1dumDaypart.r1.val = 1
                    if i.val in [Sc7b.ch4.index,Sc7b.ch5.index]:
                        HQ1_1dumDaypart.r2.val = 1
                    if i.val in [Sc7b.ch6.index,Sc7b.ch7.index,Sc7b.ch8.index]:
                        HQ1_1dumDaypart.r3.val = 1
    </exec><row label="r1" id="EXSVr">Morning</row><row label="r2" id="XVnJH">Afternoon</row><row label="r3" id="QysVH">Evening</row></checkbox><suspend id="mdbZi"/><quota overquota="noqual" sheet="DayXDayparts" id="H2BXo"/><radio label="HQ1_1dumDaypartLF" optional="1" where="execute,survey,report" id="qEP7T"><title id="GvsZo">Qualified daypart based on Sc7b</title><comment id="HFcEi">Select one</comment><exec id="mh7bV">
print p.markers
for i in HQ1_1dumDaypartLF.rows:
    if hasMarker("/DayXDayparts/{}/HQ123daypart.{}".format(dfinalDay.selected.text,i.label)):
        HQ1_1dumDaypartLF.val = i.index
    </exec><row label="r1" value="1" id="rnUJW">Morning</row><row label="r2" value="2" id="S3Sk5">Afternoon</row><row label="r3" value="3" id="PhCk4">Evening</row></radio><suspend id="F6kSk"/><checkbox label="HQ1_1dayPartOccasion" optional="1" where="execute,survey,report" id="SSj9e"><title id="PLG7p">PICKED SNACK OCCASION PROGRAMMING PURPOSES</title><comment id="qPglB">Select one</comment><exec id="ZK4j4">
for x in HQ1_1dayPartOccasion.rows:
    x.val = 0
for i in Sc7b.rows:
    if i.displayed:
        if dSc7cquota.attr(i.label):
            if HQ1_1dumDaypartLF.r1:
                if i.val in [Sc7b.ch1.index,Sc7b.ch2.index,Sc7b.ch3.index]:
                    HQ1_1dayPartOccasion.attr(i.label).val = 1
            elif HQ1_1dumDaypartLF.r2:
                if i.val in [Sc7b.ch4.index,Sc7b.ch5.index]:
                    HQ1_1dayPartOccasion.attr(i.label).val = 1
            elif HQ1_1dumDaypartLF.r3:
                if i.val in [Sc7b.ch6.index,Sc7b.ch7.index,Sc7b.ch8.index]:
                    HQ1_1dayPartOccasion.attr(i.label).val = 1
    </exec><row label="r1" id="d2nAr">SNACK OCCASION 1</row><row label="r2" id="ovV5d">SNACK OCCASION 2</row><row label="r3" id="D2UT8">SNACK OCCASION 3</row><row label="r4" id="tuWwx">SNACK OCCASION 4</row><row label="r5" id="iXieN">SNACK OCCASION 5</row><row label="r6" id="CfeBL">SNACK OCCASION 6</row><row label="r7" id="QXga3">SNACK OCCASION 7</row><row label="r8" id="nUqHd">SNACK OCCASION 8</row><row label="r9" id="rtanQ">SNACK OCCASION 9</row><row label="r10" id="NNOYl">SNACK OCCASION 10</row></checkbox><suspend id="SfstW"/><quota overquota="noqual" sheet="HQ1_1daypartLF" id="JicFk"/><radio label="HQ1_1dayPartOccasionLF" optional="1" where="execute,survey,report" id="m8Y2m"><title id="JFWId">PICKED SNACK OCCASION PROGRAMMING PURPOSES</title><comment id="HFyQO">Select one</comment><exec id="FFUiT">
for i in HQ1_1dayPartOccasionLF.rows:
    if hasMarker("/HQ1_1daypartLF/HQ1_1dayPartOccasion.{}".format(i.label)):
        HQ1_1dayPartOccasionLF.val = i.index
    </exec><row label="r1" value="1" id="wTY9r">SNACK OCCASION 1</row><row label="r2" value="2" id="f2yds">SNACK OCCASION 2</row><row label="r3" value="3" id="GhhUu">SNACK OCCASION 3</row><row label="r4" value="4" id="MNUg6">SNACK OCCASION 4</row><row label="r5" value="5" id="Ndr3a">SNACK OCCASION 5</row><row label="r6" value="6" id="jOBuV">SNACK OCCASION 6</row><row label="r7" value="7" id="PORsY">SNACK OCCASION 7</row><row label="r8" value="8" id="K5eQY">SNACK OCCASION 8</row><row label="r9" value="9" id="yb8kQ">SNACK OCCASION 9</row><row label="r10" value="10" id="kydan">SNACK OCCASION 10</row></radio><suspend id="nYyhf"/><radio label="HQ1_1dumDaypartPipe" optional="1" where="execute,survey,report" id="mlmM8"><title id="DJOnj">Selected daytime to piped in based on Sc7c</title><comment id="Oaeo3">Select one</comment><exec id="whQ3X">
listDay = [x.label[2:] for x in Sc7b.choices]

theAnswered =  listDay[Sc7b.attr(HQ1_1dayPartOccasionLF.selected.label).val]

HQ1_1dumDaypartPipe.val = HQ1_1dumDaypartPipe.attr('r'+str(theAnswered)).index
    </exec><row label="r1" value="1" id="unX39">Early morning (5am - 7am)</row><row label="r2" value="2" id="yeRl2">Morning (7am-10am)</row><row label="r3" value="3" id="D5qbA">Late morning (10am-noon)</row><row label="r4" value="4" id="bLtAQ">Early afternoon (noon - 3pm)</row><row label="r5" value="5" id="QAy0t">Late afternoon (3pm-6pm)</row><row label="r6" value="6" id="J6mEq">Evening (6pm-9pm)</row><row label="r7" value="7" id="nAktV">Late evening (9pm-midnight)</row><row label="r8" value="8" id="yn1Rr">Overnight (midnight - 5am)</row></radio><suspend id="Jhebt"/></block><block label="HQ1_2daypart" cond="HQ1.r2" id="Eoa8n"><checkbox label="HQ1_2dumDaypart" optional="1" where="execute,survey,report" id="GejCG"><title id="G1wYc">Qualified daypart based on Sc7c</title><comment id="MAWZ6">Select one</comment><exec id="lJt9S">
listSnacks = [x.label for x in Sc7c.choices]
print listSnacks
for x in HQ1_2dumDaypart.rows:
    x.val = 0
for i in Sc7b.rows:
    if i.displayed:
        for g in Sc7c.attr(i.label):
            print g.label
            print g.val
            if g.val != None:
                if listSnacks[g.val] not in ['ch50','ch52']:
                    if i.val in [Sc7b.ch1.index,Sc7b.ch2.index,Sc7b.ch3.index]:
                        HQ1_2dumDaypart.r1.val = 1
                    if i.val in [Sc7b.ch4.index,Sc7b.ch5.index]:
                        HQ1_2dumDaypart.r2.val = 1
                    if i.val in [Sc7b.ch6.index,Sc7b.ch7.index,Sc7b.ch8.index]:
                        HQ1_2dumDaypart.r3.val = 1
    </exec><row label="r1" id="nCcP1">Morning</row><row label="r2" id="jqAs7">Afternoon</row><row label="r3" id="flVnk">Evening</row></checkbox><suspend id="bkTET"/><quota overquota="noqual" sheet="DayXDayparts" id="nnFYl"/><radio label="HQ1_2dumDaypartLF" optional="1" where="execute,survey,report" id="foefu"><title id="PBd8l">Qualified daypart based on Sc7b</title><comment id="XvQwO">Select one</comment><exec id="FxDt7">
print p.markers
for i in HQ1_2dumDaypartLF.rows:
    if hasMarker("/DayXDayparts/{}/HQ123daypart.{}".format(dfinalDay.selected.text,i.label)):
        HQ1_2dumDaypartLF.val = i.index
    </exec><row label="r1" value="1" id="KG9YE">Morning</row><row label="r2" value="2" id="kHH9s">Afternoon</row><row label="r3" value="3" id="rn1ho">Evening</row></radio><suspend id="h7wQQ"/><checkbox label="HQ1_2dayPartOccasion" optional="1" where="execute,survey,report" id="fCyFg"><title id="FYKQh">PICKED SNACK OCCASION PROGRAMMING PURPOSES</title><comment id="gdBPq">Select one</comment><exec id="hGv2F">
for x in HQ1_2dayPartOccasion.rows:
    x.val = 0
for i in Sc7b.rows:
    if i.displayed:
        if dSc7cquota1.attr(i.label):
            if HQ1_2dumDaypartLF.r1:
                if i.val in [Sc7b.ch1.index,Sc7b.ch2.index,Sc7b.ch3.index]:
                    HQ1_2dayPartOccasion.attr(i.label).val = 1
            elif HQ1_2dumDaypartLF.r2:
                if i.val in [Sc7b.ch4.index,Sc7b.ch5.index]:
                    HQ1_2dayPartOccasion.attr(i.label).val = 1
            elif HQ1_2dumDaypartLF.r3:
                if i.val in [Sc7b.ch6.index,Sc7b.ch7.index,Sc7b.ch8.index]:
                    HQ1_2dayPartOccasion.attr(i.label).val = 1
    </exec><row label="r1" id="r1NE1">SNACK OCCASION 1</row><row label="r2" id="HmJKE">SNACK OCCASION 2</row><row label="r3" id="mN5Tq">SNACK OCCASION 3</row><row label="r4" id="kuNbc">SNACK OCCASION 4</row><row label="r5" id="nsb56">SNACK OCCASION 5</row><row label="r6" id="Jj8Un">SNACK OCCASION 6</row><row label="r7" id="Ri9C5">SNACK OCCASION 7</row><row label="r8" id="a71eu">SNACK OCCASION 8</row><row label="r9" id="kkWAv">SNACK OCCASION 9</row><row label="r10" id="QhLxN">SNACK OCCASION 10</row></checkbox><suspend id="XnT9B"/><quota overquota="noqual" sheet="HQ1_2daypartLF" id="id1Mx"/><radio label="HQ1_2dayPartOccasionLF" optional="1" where="execute,survey,report" id="ZjaRc"><title id="pZqr7">PICKED SNACK OCCASION PROGRAMMING PURPOSES</title><comment id="ORYx3">Select one</comment><exec id="CvKJd">
for i in HQ1_2dayPartOccasionLF.rows:
    if hasMarker("/HQ1_2daypartLF/HQ1_2dayPartOccasion.{}".format(i.label)):
        HQ1_2dayPartOccasionLF.val = i.index
    </exec><row label="r1" value="1" id="V8mih">SNACK OCCASION 1</row><row label="r2" value="2" id="fsMTg">SNACK OCCASION 2</row><row label="r3" value="3" id="VSXH8">SNACK OCCASION 3</row><row label="r4" value="4" id="NxjlF">SNACK OCCASION 4</row><row label="r5" value="5" id="y7nQh">SNACK OCCASION 5</row><row label="r6" value="6" id="nMunw">SNACK OCCASION 6</row><row label="r7" value="7" id="LZZmk">SNACK OCCASION 7</row><row label="r8" value="8" id="rOP6P">SNACK OCCASION 8</row><row label="r9" value="9" id="j3Vuw">SNACK OCCASION 9</row><row label="r10" value="10" id="FGv2Z">SNACK OCCASION 10</row></radio><suspend id="rYpdG"/><radio label="HQ1_2dumDaypartPipe" optional="1" where="execute,survey,report" id="CMSs5"><title id="fnC1D">Selected daytime to piped in based on Sc7c</title><comment id="Nhe04">Select one</comment><exec id="OraFO">
listDay = [x.label[2:] for x in Sc7b.choices]

theAnswered =  listDay[Sc7b.attr(HQ1_2dayPartOccasionLF.selected.label).val]

HQ1_2dumDaypartPipe.val = HQ1_2dumDaypartPipe.attr('r'+str(theAnswered)).index
    </exec><row label="r1" value="1" id="hZoIy">Early morning (5am - 7am)</row><row label="r2" value="2" id="nB9Hv">Morning (7am-10am)</row><row label="r3" value="3" id="DiZ9p">Late morning (10am-noon)</row><row label="r4" value="4" id="UQynU">Early afternoon (noon - 3pm)</row><row label="r5" value="5" id="otSIg">Late afternoon (3pm-6pm)</row><row label="r6" value="6" id="HHbic">Evening (6pm-9pm)</row><row label="r7" value="7" id="hISXP">Late evening (9pm-midnight)</row><row label="r8" value="8" id="LkpTM">Overnight (midnight - 5am)</row></radio><suspend id="oxoCw"/></block><quota overquota="noqual" sheet="HQ1" id="pS18P"/><exec cond="HQ1.r1" id="f8RgA">
# print p.markers

# for eachRow in HQ1_1.rows:
#     if hasMarker('/hQ1_1/dSc7cquota.r%s' % str(eachRow.index+1)):
#         HQ1_1.val = eachRow.index
</exec><block label="oldHQ1_1" cond="HQ1.r1" id="rucd2"><radio label="HQ1_1" cond="HQ1.r1" optional="1" translateable="0" where="execute,survey,report" id="fZp9D"><title id="JJxCA">IF HQ1=1, SELECT SNACKING OCCASION WHERE SC7C=19. IF MULTIPLE OCCASIONS HAVE SC7C=19, RANDOMLY SELECT ONE WHERE SC7C=19</title><comment id="vBTJ4">Select one</comment><exec id="qpraQ">
HQ1_1.val = HQ1_1dayPartOccasionLF.val
    </exec><row label="r1" value="1" id="rFtZI">SNACK OCCASION #1</row><row label="r2" value="2" id="PFH1x">SNACK OCCASION #2</row><row label="r3" value="3" id="LMTcc">SNACK OCCASION #3</row><row label="r4" value="4" id="Gcdob">SNACK OCCASION #4</row><row label="r5" value="5" id="KoUHJ">SNACK OCCASION #5</row><row label="r6" value="6" id="C9HVK">SNACK OCCASION #6</row><row label="r7" value="7" id="WqxeZ">SNACK OCCASION #7</row><row label="r8" value="8" id="T56JQ">SNACK OCCASION #8</row><row label="r9" value="9" id="Tg3ZT">SNACK OCCASION #9</row><row label="r10" value="10" id="RktyG">SNACK OCCASION #10</row></radio><suspend id="UcgOW"/><radio label="dHq1r1qualpicked" cond="HQ1.r1" optional="1" where="execute,survey,report" id="qWND5"><title id="hPHHG">And to the best of your memory, what time of day was it when you ate this item?</title><exec id="UijDs">
# dHq1r1qualpicked.val = Sc7b.rows[HQ1_1.val].val

dHq1r1qualpicked.val = HQ1_1dumDaypartPipe.val
    </exec><row label="r1" value="1" id="GdtKt">Early morning (5am - 7am)</row><row label="r2" value="2" id="DZAtX">Morning (7am-10am)</row><row label="r3" value="3" id="B3nQP">Late morning (10am-noon)</row><row label="r4" value="4" id="bsO1D">Early afternoon (noon - 3pm)</row><row label="r5" value="5" id="oZdxU">Late afternoon (3pm-6pm)</row><row label="r6" value="6" id="Mq7bh">Evening (6pm-9pm)</row><row label="r7" value="7" id="kbAt8">Late evening (9pm-midnight)</row><row label="r8" value="8" id="xxs4G">Overnight (midnight - 5am)</row></radio><suspend id="eftlc"/></block><block label="oldHQ1_2" cond="HQ1.r2" id="UGZVe"><exec cond="HQ1.r2" id="Da45X">
# print p.markers

# for eachRow in hQSnkLF.rows:
#     if hasMarker('/hQ1_2LF/hQSnkLF_%s' % str(eachRow.index+1)):
#         hQSnkLF.val = eachRow.index
hQSnkLF.val = HQ1_2dayPartOccasionLF.val
  </exec><radio label="hQSnkLF" cond="HQ1.r2" optional="1" translateable="0" where="execute,survey,report" id="bRgHr"><title id="kdjDK">SELECT ONE OCCASION USING LEAST FILL METHOD</title><comment id="b7RDQ">Select one</comment><row label="r1" value="1" id="OfWb3">SNACK OCCASION #1</row><row label="r2" value="2" id="xdNSB">SNACK OCCASION #2</row><row label="r3" value="3" id="yGxrc">SNACK OCCASION #3</row><row label="r4" value="4" id="I5vFJ">SNACK OCCASION #4</row><row label="r5" value="5" id="QVDc7">SNACK OCCASION #5</row><row label="r6" value="6" id="bhYde">SNACK OCCASION #6</row><row label="r7" value="7" id="aCeMZ">SNACK OCCASION #7</row><row label="r8" value="8" id="AXCaY">SNACK OCCASION #8</row><row label="r9" value="9" id="dKujZ">SNACK OCCASION #9</row><row label="r10" value="10" id="VCK1t">SNACK OCCASION #10</row></radio><suspend id="a5lfb"/><exec cond="HQ1.r2" id="BxVS6">
occ = Sc7b.attr('r%s' % str(hQSnkLF.val+1)).val

if occ le 2:
    HQ1_2.val = HQ1_2.r1.index
if occ gt 2 and occ le 4:
    HQ1_2.val = HQ1_2.r2.index  
if occ gt 4 and occ le 7:
    HQ1_2.val = HQ1_2.r3.index
  </exec><radio label="HQ1_2" cond="HQ1.r2" optional="1" translateable="0" where="execute,survey,report" id="skkdW"><title id="v1OWp">IF HQ1=2, SELECT ONE OCCASION USING LEAST FILL METHOD TO EVENLY DISTRIBUTE ACROSS THREE DAYPARTS LISTED BELOW.  EACH SHOULD HAVE ONE-THIRD OF RESPONDENTS:</title><comment id="Gr1fa">Select one</comment><row label="r1" value="1" id="clhI1">MORNING</row><row label="r2" value="2" id="Dro5g">AFTERNOON</row><row label="r3" value="3" id="MOKTp">EVENING</row></radio><suspend id="PHKdH"/><radio label="dHq1r2qualpicked" cond="HQ1.r2" optional="1" where="execute,survey,report" id="fD5Oa"><title id="hHs5y">And to the best of your memory, what time of day was it when you ate this item?</title><exec id="Oun5i">
dHq1r2qualpicked.val = Sc7b.rows[hQSnkLF.val].val
    </exec><row label="r1" value="1" id="f6qdM">Early morning (5am - 7am)</row><row label="r2" value="2" id="ZrkjT">Morning (7am-10am)</row><row label="r3" value="3" id="VMmGv">Late morning (10am-noon)</row><row label="r4" value="4" id="TJF71">Early afternoon (noon - 3pm)</row><row label="r5" value="5" id="YLMJa">Late afternoon (3pm-6pm)</row><row label="r6" value="6" id="JVpXL">Evening (6pm-9pm)</row><row label="r7" value="7" id="p1Tbe">Late evening (9pm-midnight)</row><row label="r8" value="8" id="QTVUs">Overnight (midnight - 5am)</row></radio><suspend id="ojZc7"/></block><exec cond="HQ1.r3" id="jdSIF">
HQ1_3.val = Sc8b.val
</exec><radio label="HQ1_3" cond="HQ1.r3" optional="1" translateable="0" where="execute,survey,report" id="h8Tty"><title id="YfqZk">USE SNACKING OCCASION INDICATED IN SC8B</title><comment id="NLht1">Select one</comment><row label="r1" value="1" id="eE7Vc">Early morning (5am - 7am)</row><row label="r2" value="2" id="lwWdT">Morning (7am-10am)</row><row label="r3" value="3" id="oBi0E">Late morning (10am-noon)</row><row label="r4" value="4" id="pOMPB">Early afternoon (noon - 3pm)</row><row label="r5" value="5" id="w0T3p">Late afternoon (3pm-6pm)</row><row label="r6" value="6" id="VCR51">Evening (6pm-9pm)</row><row label="r7" value="7" id="iqHC5">Late evening (9pm-midnight)</row><row label="r8" value="8" id="uB3xm">Overnight (midnight - 5am)</row></radio><suspend id="elF24"/><exec cond="HQ1.r3" id="eCUEo">
occ = Sc8b.val

if occ in [Sc8b.r1.index,Sc8b.r2.index,Sc8b.r3.index]:
    HQ1_3dumDaypart.val = HQ1_3dumDaypart.r1.index
if occ in [Sc8b.r4.index,Sc8b.r5.index]:
    HQ1_3dumDaypart.val = HQ1_3dumDaypart.r2.index
if occ in [Sc8b.r6.index,Sc8b.r7.index,Sc8b.r8.index]:
    HQ1_3dumDaypart.val = HQ1_3dumDaypart.r3.index
</exec><radio label="HQ1_3dumDaypart" cond="HQ1.r3" optional="1" translateable="0" where="execute,survey,report" id="GlLhu"><title id="AX165">Daypart group based with HQ1 =3</title><comment id="xqZgo">Select one</comment><row label="r1" value="1" id="PDJXY">MORNING</row><row label="r2" value="2" id="mwrDI">AFTERNOON</row><row label="r3" value="3" id="MOJJg">EVENING</row></radio><suspend id="EsrSm"/><quota cond="HQ1.r3" overquota="noqual" sheet="DayXDayparts" id="lLNwa"/><radio label="dfinalDaypart" optional="1" where="execute,survey,report" id="m3sD3"><title id="aeycm">Final Daypart picking.</title><comment id="kTmrf">Select one</comment><exec id="WY8un">
if HQ1.r1:
    dfinalDaypart.val = HQ1_1dumDaypartLF.val
elif HQ1.r2:
    dfinalDaypart.val = HQ1_2dumDaypartLF.val
elif HQ1.r3:
    dfinalDaypart.val = HQ1_3dumDaypart.val
  </exec><row label="r1" value="1" id="wYmSO">MORNING</row><row label="r2" value="2" id="HKwZj">AFTERNOON</row><row label="r3" value="3" id="FJr7K">EVENING</row></radio><suspend id="VnAXM"/><quota overquota="noqual" sheet="Dayparts" id="nqgd1"/><quota overquota="noqual" sheet="HQ1XDay" id="GE53m"/><quota overquota="noqual" sheet="HQ1XDay_separate" id="qUNOT"/><checkbox label="dAllsnacks" optional="1" translateable="0" where="execute,survey,report" id="q1CSO"><title id="E0qFo">snacks</title><comment id="pQ3wf">Select all that apply</comment><exec id="cImQ0">
p.withOrdered = []
if HQ1.r1:
    # for i in Sc7c.rows[HQ1_1.val]:
    #     if i.any and i.val not in [Sc7c.ch50.index,Sc7c.ch52.index]:
    #         dAllsnacks.rows[i.val].val = 1
    #         p.withOrdered.append(dAllsnacks.rows[i.val].label)
    #         break;
    dAllsnacks.r19.val = 1
    p.withOrdered.append(dAllsnacks.r19.label)
elif HQ1.r2:
    for i in Sc7c.rows[hQSnkLF.val]:
        if i.any and i.val not in [Sc7c.ch50.index,Sc7c.ch52.index]:
            dAllsnacks.rows[i.val].val = 1
            p.withOrdered.append(dAllsnacks.rows[i.val].label)
            break
elif dumSc7cFlagger.r1:
    dAllsnacks.r19.val = 1
  </exec><row label="r1" ss:rowClassNames="cr1" id="qCbgN">Fresh vegetables</row><row label="r2" ss:rowClassNames="cr2" id="RiQPv">Dried vegetables</row><row label="r3" ss:rowClassNames="cr3" id="dSCIw">Fresh fruit</row><row label="r4" ss:rowClassNames="cr4" id="bIhlG">Dried fruit</row><row label="r5" ss:rowClassNames="cr5" id="awUJ3">Fruit cup / applesauce</row><row label="r6" ss:rowClassNames="cr6" id="li2pW">Fruit snack (e.g., roll-ups)</row><row label="r51" ss:rowClassNames="cr51" id="q0SUE">Salad</row><row label="r7" ss:rowClassNames="cr7" id="c9jSW">Cheese / cheese sticks</row><row label="r8" ss:rowClassNames="cr8" id="RhqVy">Cottage cheese</row><row label="r9" ss:rowClassNames="cr9" id="DMrHF">Yogurt / yogurt drink</row><row label="r10" ss:rowClassNames="cr10" id="IkOkp">Smoothie</row><row label="r11" ss:rowClassNames="cr11" id="kcZvK">Cereal / granola bar</row><row label="r12" ss:rowClassNames="cr12" id="lNE0V">Fruit / nut bar</row><row label="r13" ss:rowClassNames="cr13" id="uK4Op">Protein / nutrition / energy bar</row><row label="r14" ss:rowClassNames="cr14" id="tjGyx">Weight management bar</row><row label="r15" ss:rowClassNames="cr15" id="a2OXe">Donuts, danish, scones, coffee cake - from bakery or homemade</row><row label="r16" ss:rowClassNames="cr16" id="Yw8Od">Muffins - from bakery or homemade</row><row label="r17" ss:rowClassNames="cr17" id="ye6rT">Cake, pie, brownies - from bakery or homemade</row><row label="r18" ss:rowClassNames="cr18" id="BH0WU">Cookies - from bakery or homemade</row><row label="r19" ss:rowClassNames="cr19" id="Mkvgk">Branded pre-packaged snack cakes, muffins, donuts, pies, etc. (e.g., Little Debbie, Hostess)</row><row label="r20" ss:rowClassNames="cr20" id="A0YhR">Branded pre-packaged cookies (e.g., Oreos, Chips Ahoy)</row><row label="r21" ss:rowClassNames="cr21" id="Yr1xU">Toaster pastries</row><row label="r22" ss:rowClassNames="cr22" id="Cmhh2">Treat bars (e.g., Rice Krispie treats, S'mores)</row><row label="r23" ss:rowClassNames="cr23" id="DZ2OV">Non-chocolate candy</row><row label="r24" ss:rowClassNames="cr24" id="DCtQm">Chocolate candy</row><row label="r25" ss:rowClassNames="cr25" id="YNruV">Gelatin</row><row label="r26" ss:rowClassNames="cr26" id="AsVri">Pudding</row><row label="r27" ss:rowClassNames="cr27" id="Yiq85">Frozen yogurt / ice cream / other frozen treats</row><row label="r28" ss:rowClassNames="cr28" id="AsiSt">Chips (e.g., potato, tortilla, corn, pita, etc.)</row><row label="r29" ss:rowClassNames="cr29" id="hoKHG">Pretzels</row><row label="r30" ss:rowClassNames="cr30" id="weP7b">Popcorn</row><row label="r31" ss:rowClassNames="cr31" id="olWR9">Crackers</row><row label="r32" ss:rowClassNames="cr32" id="ECt2H">Flavored / sandwich crackers (e.g., Ritz bits sandwiches, Cheez-Its, Goldfish)</row><row label="r33" ss:rowClassNames="cr33" id="VT9Se">Rice cakes</row><row label="r34" ss:rowClassNames="cr34" id="OttRH">Almonds</row><row label="r35" ss:rowClassNames="cr35" id="NDFCF">Other nuts (e.g., peanuts, pistachios, cashews)</row><row label="r36" ss:rowClassNames="cr36" id="FvX58">Seeds (e.g., sunflower, pumpkin)</row><row label="r37" ss:rowClassNames="cr37" id="Ofqvu">Trail mix</row><row label="r38" ss:rowClassNames="cr38" id="axO0i">Granola (loose, not in bar form)</row><row label="r39" ss:rowClassNames="cr39" id="VcJvT">Toast / bagel / pita / other bread product (not sandwich)</row><row label="r40" ss:rowClassNames="cr40" id="HPWrT">Waffles / pancakes</row><row label="r41" ss:rowClassNames="cr41" id="NoWYo">Sandwich (hot or cold)</row><row label="r42" ss:rowClassNames="cr42" id="xTynx">Pizza</row><row label="r43" ss:rowClassNames="cr43" id="yjCJY">Chicken nuggets / strips</row><row label="r44" ss:rowClassNames="cr44" id="mx3S5">French fries / onion rings / tater tots</row><row label="r45" ss:rowClassNames="cr45" id="vptcv">Hot appetizer (e.g., pizza rolls, mozzarella sticks, hot pockets, egg rolls, wings, etc.)</row><row label="r46" ss:rowClassNames="cr46" id="XSngT">Cold / hot cereal</row><row label="r47" ss:rowClassNames="cr47" id="yaB2F">Eggs</row><row label="r48" ss:rowClassNames="cr48" id="Afi7W">Jerky / dried or cured meats</row><row label="r49" ss:rowClassNames="cr49" id="wZLoM">Pre-packaged meal / snack packs (e.g., Lunchables)</row><row label="r50" ss:rowClassNames="cr50" id="XI1rV">Other food not listed</row><row label="r52" ss:rowClassNames="cr52" id="Go0We">Don't recall what food I ate</row></checkbox><suspend id="aFrPh"/><exec cond="HQ1.r1 or HQ1.r2" id="Tyu7V">
# print temp
sc7bappend = ",".join(set([Sc7b.choices[x.val].text for x in Sc7b.rows if x.any]))
sc7cappend = []
qualpicked = ""
print p.withOrdered
if HQ1.r1:
    qualpicked = dHq1r1qualpicked.selected.text
    for i in p.withOrdered:
         if dAllsnacks.attr(i).text not in sc7cappend:
             sc7cappend.append(dAllsnacks.attr(i).text)

elif HQ1.r2:
    qualpicked = dHq1r2qualpicked.selected.text
    for i in p.withOrdered:
         if dAllsnacks.attr(i).text not in sc7cappend:
             sc7cappend.append(dAllsnacks.attr(i).text)
sc7cappend = ", ".join(sc7cappend)
</exec><html label="introhq1_1" cond="HQ1.r1 or HQ1.r2" where="survey" id="jtt5c">In this next section, we'd like to learn more about one of your recent snack occasions.  Specifically we'd like to ask you about the snack you said you ate yesterday, &lt;b&gt;${Sc7a.selected.text}&lt;/b&gt; in the &lt;b&gt;${qualpicked}&lt;/b&gt;.  &lt;br /&gt;
&lt;br /&gt;
As a reminder, you said you ate &lt;b&gt;${sc7cappend}&lt;/b&gt;.</html><html label="introhq1_2" cond="HQ1.r3" where="survey" id="JAGw5">In this next section, we'd like to learn more about one of your recent snack occasions.  Specifically we'd like to ask you about the snack you said you ate last &lt;b&gt;${Sc8a.selected.text}&lt;/b&gt; in the &lt;b&gt;${Sc8b.selected.text}&lt;/b&gt;.  As a reminder, you indicated you ate a &lt;b&gt;packaged snack cake, mini-muffin or donut, such as Little Debbie or Hostess&lt;/b&gt;.</html><suspend id="I9M6D"/><radio label="Q101" cond="HQ1.r3 or HQ1.r1" shuffle="rows,groups" id="RVDyB"><title id="TbIeN">What was the specific brand / type of packaged snack cake you ate?</title><comment id="abMRQ">Select one</comment><style name="question.after" wrap="ready" id="Ovlda">
$ ('.29none').css('margin-top','10px')
</style><group label="g1" id="rb9e8">&lt;div&gt;&lt;img src="[rel entenmanns_t.png]" style="max-width:20%;" /&gt;&lt;/div&gt;</group><group label="g2" id="Cy97W">&lt;div&gt;&lt;img src="[rel hostess.png]" style="max-width:20%;" /&gt;  &lt;/div&gt;</group><group label="g3" id="JxI00">&lt;div&gt;&lt;img src="[rel littledebie.png]" style="max-width:20%;" /&gt; &lt;/div&gt;</group><group label="g4" randomize="0" id="yngjv">&lt;b&gt;&lt;u&gt;Other Brands&lt;/u&gt;&lt;/b&gt;</group><group label="g5" randomize="0" id="q4Dsm"/><row label="r1" groups="g1" randomize="0" value="1" id="yIbyW">Cookies</row><row label="r2" groups="g1" randomize="0" value="2" id="QQZ9P">Danish</row><row label="r3" groups="g1" randomize="0" value="3" id="Rv02A">Donuts</row><row label="r4" groups="g1" randomize="0" value="4" id="NRffw">Loaf cakes (blueberry, chocolate, butter, lemon)</row><row label="r5" groups="g1" randomize="0" value="5" id="jg90a">Mini muffins</row><row label="r6" groups="g1" randomize="0" value="6" id="LbCAg">Pop-ems</row><row label="r7" groups="g1" randomize="0" value="7" id="wPFtK">Other Entenmann's</row><row label="r8" groups="g2" randomize="0" value="8" id="rVRku">Cupcakes</row><row label="r9" groups="g2" randomize="0" value="9" id="TewRI">Ding Dongs</row><row label="r10" groups="g2" randomize="0" value="10" id="cdncY">Donettes</row><row label="r11" groups="g2" randomize="0" value="11" id="K9eIC">Ho Hos</row><row label="r12" groups="g2" randomize="0" value="12" id="lG44B">Mini Muffins</row><row label="r13" groups="g2" randomize="0" value="13" id="cPtfw">Twinkies</row><row label="r14" groups="g2" randomize="0" value="14" id="OGG6C">Other Hostess</row><row label="r15" groups="g3" randomize="0" value="15" id="rDI68">Donuts</row><row label="r16" groups="g3" randomize="0" value="16" id="PJPY7">Honey Buns</row><row label="r17" groups="g3" randomize="0" value="17" id="aE2ei">Mini Muffins</row><row label="r18" groups="g3" randomize="0" value="18" id="OuCCp">Nutty Buddys</row><row label="r19" groups="g3" randomize="0" value="19" id="kXgIV">Oatmeal Cr&#232;me Pies</row><row label="r20" groups="g3" randomize="0" value="20" id="Cwpu7">Swiss Rolls</row><row label="r21" groups="g3" randomize="0" value="21" id="Zauo3">Zebra Cakes</row><row label="r22" groups="g3" randomize="0" value="22" id="cLkik">Other Little Debbie</row><row label="r23" groups="g4" value="23" id="ApvZc">Big Texas - any type</row><row label="r24" groups="g4" value="24" id="VJi1Y">Clover Hill - any type</row><row label="r25" groups="g4" value="25" id="wSZ2p">Dolly Madison - any type</row><row label="r26" groups="g4" value="26" id="vRgA3">Krispy Kreme - any type</row><row label="r27" groups="g4" value="27" id="F1yme">Other Brand - any type</row><row label="r28" groups="g4" value="28" id="XdggH">Store Brand / Private Label - any type</row><row label="r29" groups="g5" ss:rowClassNames="29none" value="29" id="Bvh8d">None of these</row></radio><suspend id="qj3r7"/><number label="dVersion" size="3" where="execute,survey,report" id="hoYeQ"><title id="Wr99H">CAPTURE MAX DIFF VERSION</title><comment id="YE1fE">Please enter a whole number</comment><exec id="jsBYO">
dVersion.r1.val = 1;
  </exec><row label="r1" id="n04Sl"/></number><suspend id="pUcGF"/><radio label="hmaxDiffrotation" optional="1" shuffle="rows" translateable="0" where="execute,survey,report" id="xQFgj"><title id="cWela">maxDiffrotation</title><comment id="T0KBl">Select one</comment><row label="r1" id="edpY6">1</row><row label="r2" id="IT0bx">2</row><row label="r3" id="CQa5b">3</row><row label="r4" id="x3Fsx">4</row><row label="r5" id="exQ3a">5</row><row label="r6" id="DISDi">6</row><row label="r7" id="YI2VH">7</row><row label="r8" id="OK1qm">8</row><row label="r9" id="eG9dD">9</row><row label="r10" id="TcgmE">10</row></radio><suspend id="WYICa"/><text label="hmaxDiffrotationOrder" where="execute,survey,report" id="pHwqi"><title id="lxNSN">Dummy maxDiffrotation Order record</title><exec id="HkRlI">
ordered = ",".join([x.label[1:] for x in hmaxDiffrotation.rows.order])
hmaxDiffrotationOrder.r1.val = ordered
  </exec><row label="r1" value="1" id="BkV5V"/></text><suspend id="jPZXc"/><radio label="vmaxDiffrotationOrder" optional="1" shuffle="rows" translateable="0" where="execute,survey,report" id="agBuo"><title id="KvPOX">Virtual maxDiffrotation Order record</title><comment id="sUoqO">Select one</comment><virtual id="aYp2P">
assignRandomOrder('hmaxDiffrotation', 'rows')
  </virtual><row label="r1" id="dv2Ty">1</row><row label="r2" id="jC14f">2</row><row label="r3" id="ebTR0">3</row><row label="r4" id="KpfAY">4</row><row label="r5" id="BWEcl">5</row><row label="r6" id="RVLNT">6</row><row label="r7" id="HhgQn">7</row><row label="r8" id="nbKe0">8</row><row label="r9" id="e60an">9</row><row label="r10" id="gdnh7">10</row></radio><suspend id="LS11g"/><exec id="bxVYT">
Q116_maxdiff_expanded.order = hmaxDiffrotation.rows.order
</exec><loop label="Q116_maxdiff" randomizeChildren="1" suspend="0" vars="combi" id="EHDAR"><block label="Q116_block" id="pWHjA"><exec id="Gt7g5">
MaxDiffFile = File("max_design1.dat","Version");
Version = "%s::%s" %(dVersion.r1.val,"[loopvar: label]")
MaxDiffInfo =  MaxDiffFile.get(Version)
hTrackCombination_[loopvar: label].val = MaxDiffInfo["show"].replace('"','')
hBlock_[loopvar: label].val = [loopvar: label]
    </exec><text label="hTrackCombination_[loopvar: label]" optional="1" size="40" translateable="0" where="execute,survey,report" id="GxWKP"><title id="iGc3E">Hidden: Attribute to show and the combination order</title><row label="r1" id="XmJyp"/></text><suspend id="vtJMT"/><text label="hBlock_[loopvar: label]" optional="1" size="40" translateable="0" where="execute,survey,report" id="tsJwW"><title id="Nowhn">Hidden: Attribute to show block number</title><row label="r1" id="x5UM8"/></text><suspend id="mw1kB"/><exec id="Y5KDr">
#change the order of the rows
newOrder = []
for i in hTrackCombination_[loopvar: label].r1.val.split(","): newOrder.append(Q116_[loopvar: label].attr("r%s" % i))
Q116_[loopvar: label].rows.order = newOrder[:]
    </exec><radio label="Q116_[loopvar: label]" grouping="cols" rowCond="row.label.replace('r','') in hTrackCombination_[loopvar: label].r1.val.split(',')" shuffle="rows" unique="1" id="gSUB7"><title id="PcjSB">We're going to show you 5 statements at a time. For each set of statements, please choose the &lt;b&gt;one that was most important in leading you&lt;/b&gt; to have a snack at this time, and the &lt;b&gt;one that was least important in leading you&lt;/b&gt; to have a snack at this time.</title><comment id="UppoO">SELECT ONE THAT WAS MOST IMPORTANT AND ONE THAT WAS LEAST IMPORTANT</comment><col label="c1" value="1" id="T43TV">&lt;b&gt;Most Important&lt;/b&gt;</col><col label="c2" value="2" id="nvR03">&lt;b&gt;Least Important&lt;/b&gt;</col><row label="r1" id="IR3aY">I wanted to treat / reward myself</row><row label="r2" id="skvUx">I wanted to relax / unwind / take time for myself</row><row label="r3" id="Z8Q8a">I wanted to relieve some anxiety / stress</row><row label="r4" id="k0CyI">I wanted to lift my spirits, improve my mood</row><row label="r5" id="x4col">I wanted to procrastinate or put off something else I should have been doing</row><row label="r6" id="yeJtH">I wanted to occupy myself while I was reading, watching TV, sitting around, etc.</row><row label="r7" id="ySn9N">I was bored</row><row label="r8" id="mhN14">I wanted to take a break from what I was doing (work, study break, etc.)</row><row label="r9" id="OD3EW">I wanted a pick-me-up, an energy boost</row><row label="r10" id="ap6Tb">I wanted to prepare / get focused / centered for whatever was next</row><row label="r11" id="chNUE">To help me avoid getting "hangry" - that irritable feeling when I'm hungry</row><row label="r12" id="j7Tpa">I was feeling nauseous, light-headed, headachy, etc.</row><row label="r13" id="cmaQF">I was really hungry</row><row label="r14" id="IB1VF">I wanted something to just tide me over until my next meal</row><row label="r15" id="Xfdf3">I wanted to replace a meal I had skipped, or knew I would be skipping</row><row label="r16" id="WEcni">I didn't want to take time to stop for a full meal</row><row label="r17" id="bsgJE">I had a craving I wanted to satisfy</row><row label="r18" id="cH2MS">I saw / smelled something that made me want to eat it</row><row label="r19" id="egS6u">Having a snack was part of the experience / activity at this time</row><row label="r20" id="i0EAJ">I wanted to eat and socialize with others who were snacking at this time</row><row label="r21" id="C4lvg">Someone else asked me to snack / share snack with them</row><row label="r22" id="Xpxm0">Someone else started snacking and I decided to snack too</row><row label="r23" id="xOClb">It was part of my routine - I always snack at this time of day, in this place, when doing this activity</row><row label="r24" id="VI9t6">It was part of my overall food plan I had for the day - when I was going to snack vs. eat a meal</row><row label="r25" id="mYJnt">I wanted to feel soothed / comforted</row><style name="question.after" wrap="ready" id="eiOHI">
jQuery(".grid-table-mode tr").each(function(){ jQuery(this).prepend(jQuery(this).find("td,th").eq(1)) });
</style><style name="question.after" id="m3Gtu">
&lt;style&gt;.grid.grid-table-mode .row-legend {text-align: center;}&lt;/style&gt;
</style></radio><suspend id="OjeSJ"/></block><looprow label="1" cond="1" id="q4U6W"><loopvar name="combi" id="XOKZw">Combination 1</loopvar></looprow><looprow label="2" cond="1" id="mNIZ5"><loopvar name="combi" id="LWk6o">Combination 2</loopvar></looprow><looprow label="3" cond="1" id="RJo2S"><loopvar name="combi" id="O1YR0">Combination 3</loopvar></looprow><looprow label="4" cond="1" id="BahXs"><loopvar name="combi" id="JhIdN">Combination 4</loopvar></looprow><looprow label="5" cond="1" id="Reb1i"><loopvar name="combi" id="Qkhld">Combination 5</loopvar></looprow><looprow label="6" cond="1" id="HP3VB"><loopvar name="combi" id="ciwLa">Combination 6</loopvar></looprow><looprow label="7" cond="1" id="tKii7"><loopvar name="combi" id="dnrqx">Combination 7</loopvar></looprow><looprow label="8" cond="1" id="pDiEB"><loopvar name="combi" id="SsEoZ">Combination 8</loopvar></looprow><looprow label="9" cond="1" id="qbCkd"><loopvar name="combi" id="QTJo7">Combination 9</loopvar></looprow><looprow label="10" cond="1" id="CV94m"><loopvar name="combi" id="j23U7">Combination 10</loopvar></looprow></loop><note id="EtbBZ">116 set up per maxdiff design</note><suspend id="dybwI"/><checkbox label="Q103" atleast="1" shuffle="rows,groups" id="WpOae"><title id="iFy1S">Which of the following describes what you were looking for from the snack you had at this time?</title><comment id="PUKel">Select all that apply</comment><group label="g1" id="HOcxd"/><group label="g2" id="U4CYN"/><group label="g3" id="nEnVr"/><group label="g4" id="irU2a"/><group label="g5" id="iBdo4"/><group label="g6" id="saKaC"/><row label="r1" groups="g1" id="kptUv">Rich, indulgent, decadent</row><row label="r2" groups="g1" id="KWyFq">Not overly sweet / well-balanced sweet</row><row label="r3" groups="g1" id="CH80O">Good combination of flavors and / or textures</row><row label="r4" groups="g1" id="gZj3q">A specific flavor type (sweet, salty, spicy, bold, etc.)</row><row label="r5" groups="g1" id="yil10">A specific flavor (chocolate, fruit, nacho cheese, etc.)</row><row label="r6" groups="g1" id="Ap1Gk">A specific texture (crunchy, creamy, chewy, etc.)</row><row label="r7" groups="g1" id="SGkoG">A taste that complemented my beverage</row><row label="r8" groups="g2" id="XS3SD">Something I don't always have, would be special</row><row label="r9" groups="g2" id="T6Ike">Familiar, favorite food</row><row label="r10" groups="g2" id="TCf7b">Nostalgia, reminds me of my childhood</row><row label="r11" groups="g2" id="D1QMK">A family tradition</row><row label="r12" groups="g2" id="unrVU">Fun to eat</row><row label="r13" groups="g2" id="JZBQG">Easy to share</row><row label="r14" groups="g3" id="kFNFh">No artificial colors, ingredients or preservatives</row><row label="r15" groups="g3" id="MDeSJ">Is made with simple, clean ingredients</row><row label="r16" groups="g3" id="vkQpy">Is wholesome</row><row label="r17" groups="g3" id="bCZoQ">Is a healthier alternative to other similar foods</row><row label="r18" groups="g3" id="N8IuW">Positive nutritional value (e.g., protein, fiber, calcium, etc.)</row><row label="r19" groups="g3" id="F79Nw">Is fresh</row><row label="r20" groups="g3" id="Pl7ED">No / low negative qualities (e.g., fat, sugar, calories)</row><row label="r21" groups="g3" id="kSiF2">Is part of a weight loss / nutrition / clean eating lifestyle or plan</row><row label="r22" groups="g4" id="j3Z8P">Gives me a quick energy boost</row><row label="r23" groups="g4" id="Po8c8">Gives me long lasting energy</row><row label="r24" groups="g4" id="sxfgZ">Fills me up</row><row label="r25" groups="g4" id="TGFvk">Is light, not overly filling</row><row label="r26" groups="g5" id="YPRoO">Something I could savor</row><row label="r27" groups="g5" id="YBh1N">Can eat quickly</row><row label="r28" groups="g5" id="MfXDR">Can eat on-the-go or while multi-tasking</row><row label="r29" groups="g6" id="j730d">Is portable</row><row label="r30" groups="g6" id="Vccg9">Quick, easy to prepare</row><row label="r31" groups="g6" id="AU5X9">No prep required</row><row label="r32" groups="g6" id="RybEr">Not messy to eat</row><row label="r33" groups="g6" id="Odk9M">Pieces are bite sized, easy to pop in my mouth</row></checkbox><suspend id="OyJ39"/><checkbox label="Q102" atleast="1" id="RlaKJ"><title id="KIl1d">Did you eat or drink any of the following on this same occasion?</title><comment id="Jd47F">Select all that apply</comment><group label="g1" id="NEsGj">&lt;u&gt;Spread / Dips&lt;/u&gt;</group><group label="g2" id="ABdQI">&lt;u&gt;Beverages&lt;/u&gt;</group><group label="g3" randomize="0" id="hsP4w"/><row label="r8" groups="g2" id="MePWO">Water - tap, bottled</row><row label="r9" groups="g2" id="Wu9e1">Flavored sparkling water</row><row label="r10" groups="g2" id="j4fbu">Carbonated soft drink</row><row label="r11" groups="g2" id="CMZiQ">Juice / Lemonade</row><row label="r12" groups="g2" id="Kb1vA">Sport / energy drink</row><row label="r13" groups="g2" id="o736v">Hot coffee / tea</row><row label="r14" groups="g2" id="MJ1Jq">Iced coffee / tea</row><row label="r15" groups="g2" id="WijUY">Milk</row><row label="r16" cond="not (Sc2.val le 20)" groups="g2" id="HIFlR">Alcoholic beverage (beer, wine, etc)</row><row label="r17" groups="g2" open="1" openSize="25" randomize="0" id="qsvkq">Other beverage &lt;b&gt;&lt;i&gt;(PLEASE SPECIFY)&lt;/i&gt;&lt;/b&gt;:</row><row label="r1" groups="g1" id="UNIJj">Peanut / other nut butter</row><row label="r2" groups="g1" id="fyOmB">Guacamole</row><row label="r3" groups="g1" id="Xy3rK">Salsa</row><row label="r4" groups="g1" id="JYAhU">Fruit dip (e.g., caramel, chocolate)</row><row label="r5" groups="g1" id="qshR0">Creamy dip (e.g., ranch, french onion)</row><row label="r6" groups="g1" id="RLopH">Hummus</row><row label="r7" groups="g1" open="1" openSize="25" randomize="0" id="deRx4">Other spread or dip &lt;b&gt;&lt;i&gt;(PLEASE SPECIFY)&lt;/i&gt;&lt;/b&gt;:</row><row label="r18" exclusive="1" groups="g3" ss:rowClassNames="Q10218" id="hUTff">Didn't have a spread / dip or beverage on this occasion</row><style name="question.after" id="AvHwT">
&lt;style&gt;
.Q10218{
   margin-left : -20px;
   margin-top:20px;
}
&lt;/style&gt;
</style></checkbox><suspend id="cs121"/><html label="intro104" where="survey" id="Bj92M">&lt;b&gt;Now we would like you to tell us a few facts about this occasion.&lt;/b&gt;</html><suspend id="rdfv6"/><radio label="Q104" id="onDHa"><title id="Z4KkJ">Would you say this occasion was &#8230;?</title><comment id="pQySn">Select one</comment><row label="r1" value="1" id="tg8lO">A snack between / after meals</row><row label="r2" value="2" id="v3ED5">A mini-meal or meal replacement</row></radio><suspend id="y6hbN"/><radio label="Q105" averages="cols" rowShuffle="flip" shuffle="rows" type="rating" id="ThyEP"><title id="NO9Bn">What was your level of hunger at this time?</title><comment id="eRtR7">Select one</comment><col label="c6" alt="6-Extremely hungry" value="6" id="tWrg7">${"6-Extremely hungry" if gv.request.device.isMobileDevice() else "Extremely hungry&lt;br /&gt;&lt;br /&gt; 6"}</col><col label="c5" value="5" id="U7Op8">5</col><col label="c4" value="4" id="NcbHj">4</col><col label="c3" value="3" id="xUfoQ">3</col><col label="c2" value="2" id="uegM4">2</col><col label="c1" alt="1-Not really hungry at all" value="1" id="mLgr6">${"1-Not really hungry at all" if gv.request.device.isMobileDevice() else "Not really hungry at all&lt;br /&gt;&lt;br /&gt; 1"}</col></radio><suspend id="d0d47"/><radio label="Q106" id="jimgi"><title id="l3s71">About how long had it been since your last full meal?</title><comment id="OhK2v">Select one</comment><row label="r1" value="1" id="JnLRZ">Less than an hour</row><row label="r2" value="2" id="kX9RR">1 hour</row><row label="r3" value="3" id="deEWQ">2 hours</row><row label="r4" value="4" id="oDNcT">3 hours</row><row label="r5" value="5" id="ruQev">4 hours</row><row label="r6" value="6" id="sFDb1">5 or more hours</row></radio><suspend id="iAeO4"/><radio label="Q107" onLoad="copy('Q106',rows=True)" id="QdjOC"><title id="AYaOX">And about how long was it until you had your next full meal?</title><comment id="aknKf">Select one</comment></radio><suspend id="os7LW"/><radio label="Q108" id="ALRUx"><title id="rQaMb">Where were you when you had this snack?</title><comment id="YctGt">Select one</comment><row label="r1" value="1" id="CXulj">At home</row><row label="r2" value="2" id="tahuB">At someone else's home</row><row label="r3" value="3" id="oBiyU">At work / school</row><row label="r4" value="4" id="FC2SJ">In transit (car, bus, train, etc.)</row><row label="r5" value="5" id="EkmrY">At gym / workout facility</row><row label="r6" value="6" id="lXpgL">Outside (park, sports field, etc.)</row><row label="r7" open="1" openSize="40" value="7" id="nIhmo">Somewhere else &lt;i&gt; &lt;b&gt;(PLEASE SPECIFY):&lt;/b&gt;&lt;/i&gt;</row></radio><suspend id="kGjRr"/><radio label="Q109a" id="mnPWN"><title id="WwSMf">Were other people snacking with you at this time?</title><comment id="ZwGqt">Select one</comment><row label="r1" value="1" id="EYy2Y">Yes</row><row label="r2" value="2" id="pv5Zr">No</row></radio><suspend id="H8L3d"/><radio label="Q109b" cond="Q109a.r1" id="Le9vJ"><title id="gFmQD">Were you sharing the same snack foods or were people eating different things?</title><comment id="GOkYc">Select one</comment><row label="r1" value="1" id="MdIKK">Sharing same snack foods</row><row label="r2" value="2" id="SX64j">People were eating different things</row></radio><suspend id="SUk5R"/><checkbox label="Q110" atleast="1" shuffle="rows" id="ZV0ba"><title id="kW9Bb">What were you doing at the time you had this snack?</title><comment id="qKv0H">Select all that apply</comment><row label="r1" id="QdF0p">Watching TV</row><row label="r2" id="hLjLO">Listening to music</row><row label="r3" id="f7wvs">Engaged with social media, other internet content</row><row label="r4" id="dsZKk">Working / doing homework</row><row label="r5" id="leK8b">Reading</row><row label="r6" id="CsLJo">Relaxing</row><row label="r7" id="WK4UN">At a party / lively social gathering</row><row label="r8" id="bLnbL">Engaged in sport activity, pre- or post-work out</row><row label="r9" id="oTYHf">Doing chores</row><row label="r10" id="qGXG3">Driving / commuting</row><row label="r11" id="uTOBC">Running errands</row><row label="r12" id="yDQFA">Outdoor activities (sports, picnic, beach, hiking, etc.)</row><row label="r13" open="1" openSize="25" randomize="0" id="vDAqW">Other &lt;i&gt; &lt;b&gt;(PLEASE SPECIFY)&lt;/b&gt;&lt;/i&gt;:</row></checkbox><suspend id="SbgTC"/><radio label="Q111" id="uRp0N"><title id="LRAD1">How much time did you spend eating this snack?</title><comment id="pqumN">Select one</comment><row label="r1" value="1" id="P7CBQ">Less than 1 minute</row><row label="r2" value="2" id="ogpc6">1-3 minutes</row><row label="r3" value="3" id="oiE50">3-5 minutes</row><row label="r4" value="4" id="JCDpe">5-10 minutes</row><row label="r5" value="5" id="MiHX9">More than 10 minutes</row></radio><suspend id="whYsI"/><exec id="boZhj">
Q112acond = 0
if HQ1.r3:
   Q112acond = 1

qualifiedSelection = [2, 4, 5, 7, 8, 9, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37]




for i in dAllsnacks.rows:
    if i:
       if int(i.label[1:]) in qualifiedSelection:
           Q112acond = 1;



# listSnacks = [x.label[1:] for x in dAllsnacks.rows]

# for eachC in Sc7c.rows:
#     if eachC.displayed:
#         for x in eachC:
#             if x:
#                 if int(listSnacks[x.val]) in qualifiedSelection:
#                    Q112acond = 1
#                    break;

            
# print "========"           
# print Q112acond
</exec><radio label="Q112a" cond="Q112acond" id="tcU0f"><title id="bOVTq">Was the item you had on this occasion in &#8230;?</title><comment id="RuMFK">Select one</comment><row label="r1" value="1" id="eDT0u">A single serve, individual portion package</row><row label="r2" value="2" id="i9Mya">A multi-serve, full sized package</row></radio><suspend id="Ii7rh"/><radio label="Q112b" id="e2l1O"><title id="kMloL">Was the item you had &#8230;?</title><comment id="JmbAm">Select one</comment><row label="r1" value="1" id="YEdCj">On hand / available</row><row label="r2" value="2" id="mx4tm">Had to be purchased right before eating</row></radio><suspend id="f96fS"/><radio label="Q113a" cond="Q112b.r2" id="YP3Xg"><title id="a588I">From where did you purchase this snack?</title><comment id="bKcxn">Select one</comment><row label="r1" value="1" id="iCaUU">Grocery store</row><row label="r2" value="2" id="ejZUm">Mass merchandise store</row><row label="r3" value="3" id="NBf6s">Convenience store</row><row label="r4" value="4" id="aGs3c">Club store</row><row label="r5" value="5" id="Xxgw5">Gas station mini-mart</row><row label="r6" value="6" id="W4CL0">Drug store</row><row label="r7" value="7" id="vrltx">Dollar store</row><row label="r8" value="8" id="h5yMp">Fast food restaurant</row><row label="r9" value="9" id="ZDMQO">Specialty beverage restaurant (coffee shop, smoothie shop, etc.)</row><row label="r10" value="10" id="SXHwL">Cafeteria (at work, school)</row><row label="r11" value="11" id="b08mP">Vending machine</row><row label="r12" value="12" id="vUReC">Health club / gym</row><row label="r13" value="13" id="rJpwb">Movie theater</row><row label="r14" open="1" openSize="25" randomize="0" value="14" id="OnXvX">Other &lt;i&gt; &lt;b&gt;(PLEASE SPECIFY)&lt;/b&gt;&lt;/i&gt;:</row></radio><suspend id="ik0ps"/><radio label="Q113b" cond="Q112b.r2" id="XUsCd"><title id="CxnjM">Was this a&#8230;?</title><comment id="u2UOo">SELECT ONE</comment><row label="r1" value="1" id="Q0LKO">Planned purchase</row><row label="r2" value="2" id="QLdsm">Impulse purchase</row></radio><suspend id="VGUY7"/><radio label="Q114" cond="(Sc2.ival ge 14 and Sc2.ival le 17) and Q112b.r2" id="bf3on"><title id="wJQ8G">How did you pay for this snack?</title><comment id="m2IN8">Select one</comment><row label="r1" value="1" id="ITlVt">Used your own money to buy it (from job, allowance, etc.)</row><row label="r2" value="2" id="bW1VU">Parent / adult gave you money specifically to buy this snack</row></radio><suspend id="ydvlI"/><checkbox label="Q115" cond="(Sc2.ival ge 14 and Sc2.ival le 17) and Q112b.r2" atleast="1" id="JxP22"><title id="ILG9m">Please select all of the following that apply to this snack occasion.</title><comment id="Ed1QU">Select all that apply</comment><group label="g1" id="oL8mP">&lt;i&gt;My parent / guardian &#8230;&lt;/i&gt;</group><row label="r1" groups="g1" id="kABcR">Knew I was snacking at this time</row><row label="r2" groups="g1" id="PhpXP">Knew what I was snacking on at this time</row><row label="r3" groups="g1" id="b91q3">Gave me permission to snack at this time</row><row label="r4" groups="g1" id="MLkag">Would approve of what I chose to snack on at this time</row><row label="r5" exclusive="1" groups="g1" randomize="0" id="u8SMQ">None of the above</row></checkbox><suspend id="En2iG"/><checkbox label="Q117" atleast="1" shuffle="rows" id="ipSQy"><title id="uIjsi">Which of the following best describes how you felt after you ate this snack?</title><comment id="DdhMl">Select all that apply</comment><row label="r1" id="tB3sc">Content</row><row label="r2" id="RaNWt">Energetic</row><row label="r3" id="NZsXi">Full</row><row label="r4" id="MrVGg">Guilty</row><row label="r5" id="YhvF2">Happy, upbeat</row><row label="r6" id="QuGq0">Healthy</row><row label="r7" id="qfLYY">Indifferent</row><row label="r8" id="bLaHe">Like ate too much</row><row label="r9" id="DGqLi">No different than before</row><row label="r10" id="FJiJq">Nourished</row><row label="r11" id="CEngT">On a "sugar buzz"</row><row label="r12" id="k8L7N">Refreshed</row><row label="r13" id="tv5Cm">Relaxed</row><row label="r14" id="HPoxj">Satisfied</row><row label="r15" id="HMaHa">Sluggish, tired</row><row label="r16" id="unOXo">Sociable</row><row label="r17" id="xu9g5">Soothed</row><row label="r18" id="tkwl3">Still hungry</row><row label="r19" id="g9hEY">Stressed</row><row label="r20" id="BvJhF">Tired</row></checkbox><suspend id="cVPK5"/><radio label="Q118" id="KlNyJ"><title id="uZnoI">How satisfied were you with the snack you chose on this occasion?</title><comment id="UCF5Y">Select one</comment><col label="c7" alt="7-Extremely Satisfied" value="7" id="y9ZcN">${"7-Extremely Satisfied" if gv.request.device.isMobileDevice() else "Extremely Satisfied&lt;br /&gt;&lt;br /&gt; 7"}</col><col label="c6" value="6" id="C6urd">6</col><col label="c5" value="5" id="SNZ4b">5</col><col label="c4" value="4" id="whQoq">4</col><col label="c3" value="3" id="v7h5l">3</col><col label="c2" value="2" id="diw60">2</col><col label="c1" alt="1-Not At All Satisfied" value="1" id="lmNWc">${"1-Not At All Satisfied" if gv.request.device.isMobileDevice() else "Not At All Satisfied&lt;br /&gt;&lt;br /&gt; 1"}</col></radio><suspend id="JknME"/><checkbox label="Q119" cond="Q118.c1 or Q118.c2 or Q118.c3" atleast="1" shuffle="rows" id="NBKKD"><title id="rO6dk">What improvements would you be interested in, that would make the food you had on this occasion better for situations just like this?</title><comment id="EAAK2">Select all that apply</comment><row label="r1" id="NUxd4">Better taste</row><row label="r2" id="MPfCO">Better texture</row><row label="r3" id="h4dfs">Better hunger satisfaction</row><row label="r4" id="v3M7R">Provide more energy</row><row label="r5" id="VKedA">Provide more nutritional value</row><row label="r6" id="ffLqK">Be less processed</row><row label="r7" id="T67IT">Be all-natural / organic / non-GMO</row><row label="r8" id="vqbtC">Be more indulgent</row><row label="r9" id="T1wa2">Bigger serving size</row><row label="r10" id="jTj5V">Smaller serving size</row><row label="r11" id="ZnZwm">Better portability</row><row label="r12" id="KU5ch">Easier to eat on-the-go</row><row label="r13" exclusive="1" randomize="0" id="O5n2F">None of the above</row></checkbox><suspend id="kn4mK"/><block label="general_snacking_block" id="XnP9D"><html label="intro201" where="survey" id="pNS1K">&lt;b&gt;Now we'd like to ask you just a few questions about your meal and snacking behavior in general.&lt;/b&gt;</html><suspend id="vn4ay"/><number label="Q201_1" amount="7" autosum:prefill="0" optional="0" size="3" uses="autosum.5" id="lj3Wi"><title id="gsEoD">&lt;u&gt;In a typical week&lt;/u&gt;, how many times would you say you &#8230;?</title><comment id="h0wT5">ENTER ONE NUMBER FOR EACH RESPONSE.  ENTER "0" IF NONE.  TOTAL FOR EACH MEAL MUST EQUAL 7.</comment><group label="g1" id="ZcdPb">&lt;b&gt;&lt;u&gt;Breakfast&lt;/u&gt;&lt;/b&gt;</group><row label="r1" groups="g1" id="ubyvv">Sit down / dedicate time to eat breakfast</row><row label="r2" groups="g1" id="jnDnK">Eat more of a grab and go, snack-like breakfast</row><row label="r3" groups="g1" id="BjTBG">Skip breakfast entirely</row></number><number label="Q201_2" amount="7" autosum:prefill="0" optional="0" size="3" uses="autosum.5" id="PGkyu"><title id="Stbek">&amp;nbsp;</title><group label="g1" id="hSxi4">&lt;b&gt;&lt;u&gt;Lunch&lt;/u&gt;&lt;/b&gt;</group><row label="r1" groups="g1" id="cgbXf">Sit down / dedicate time to eat lunch</row><row label="r2" groups="g1" id="XbhoO">Eat more of a grab and go, snack-like lunch</row><row label="r3" groups="g1" id="VMqkc">Skip lunch entirely</row></number><number label="Q201_3" amount="7" autosum:prefill="0" optional="0" size="3" uses="autosum.5" id="nYOlE"><title id="Gx3Ym">&amp;nbsp;</title><group label="g1" id="NmU06">&lt;b&gt;&lt;u&gt;Dinner&lt;/u&gt;&lt;/b&gt;</group><row label="r1" groups="g1" id="Rn5qt">Sit down / dedicate time to eat dinner</row><row label="r2" groups="g1" id="fgkqm">Eat more of a grab and go, snack-like dinner</row><row label="r3" groups="g1" id="T97tU">Skip dinner entirely</row></number><suspend id="EaXPX"/><number label="dQ201_1_total" size="3" where="execute,survey,report" id="lBxbr"><title id="hbs5C">Total of Q201_1 Breakfast</title><comment id="Blyas">Please enter a whole number</comment><exec id="evFtS">
dQ201_1_total.val = Q201_1.sum
    </exec></number><suspend id="EQbD8"/><number label="dQ201_2_total" size="3" where="execute,survey,report" id="GCbdj"><title id="JXgoO">Total of Q201_2 Lunch</title><comment id="Aw6GG">Please enter a whole number</comment><exec id="NC0L3">
dQ201_2_total.val = Q201_2.sum
    </exec></number><suspend id="k6BrX"/><number label="dQ201_3_total" size="3" where="execute,survey,report" id="S6fiv"><title id="fdWFA">Total of Q201_3 Dinner</title><comment id="AJX4g">Please enter a whole number</comment><exec id="fnYbB">
dQ201_3_total.val = Q201_3.sum
    </exec></number><suspend id="uS9Qw"/><note id="FF5AT">will recode to one question 201</note><number label="Q202a" optional="0" size="3" verify="range(1,10)" id="mRH5B"><title id="TSXf9">&lt;u&gt;In a typical day&lt;/u&gt;, how many times would you say you have a snack?  When answering, please think about all the times you have something to snack on between / after meals &lt;u&gt;and&lt;/u&gt; the times you eat snacks to replace a meal.</title><comment id="dd56c">ENTER ONE NUMBER</comment><style name="question.after" wrap="ready" id="QaUhb">
$ (':text').attr('maxlength','2');
</style></number><suspend id="fn4St"/><number label="Q202b" amount="100" autosum:postText="%" autosum:prefill="0" optional="0" size="3" uses="autosum.5" id="r9Pxr"><title id="dFgOi">Thinking about the type of snacking you do in a typical day, what percent would you say is &#8230;?</title><comment id="QGldB">ENTER ONE NUMBER FOR EACH RESPONSE.  ENTER "0" IF NONE.  TOTAL MUST EQUAL 100%.</comment><row label="r1" id="lKLl7">Snacking between / after meals</row><row label="r2" id="T7fW8">Snacking that is more of a mini-meal / meal replacement</row></number><suspend id="RksSo"/><number label="Q202c" amount="100" autosum:postText="%" autosum:prefill="0" optional="0" size="3" uses="autosum.5" id="KKJkt"><title id="lap6t">And of the snacks you eat in a typical day, what percent would you say are &#8230;?
</title><comment id="MFeJ2">ENTER ONE NUMBER FOR EACH RESPONSE.  ENTER "0" IF NONE.  TOTAL MUST EQUAL 100%.</comment><row label="r1" id="gtdY5">Treats / indulgences - either sweet or savory</row><row label="r2" id="bXWjq">Healthful / purposeful / good-for-you - either sweet or savory</row></number><suspend id="nm9Dp"/><checkbox label="Q203a" atleast="1" shuffle="rows,groups" id="xbKOm"><title id="fIql0">Which of the following foods are regularly available in your household for people to snack on, regardless of whether or not you personally snack on them?</title><comment id="HuxdW">SELECT ALL THAT APPLY</comment><group label="g1" id="FPMRE">&lt;u&gt;Fruit / Vegetable Based&lt;/u&gt;</group><group label="g2" id="xFqqh">&lt;u&gt;Dairy / Smoothies&lt;/u&gt;</group><group label="g3" id="Bn3B0">&lt;u&gt;Bars&lt;/u&gt;</group><group label="g4" id="wrJUW">&lt;u&gt;Sweet Foods&lt;/u&gt;</group><group label="g5" id="UPfbg">&lt;u&gt;Salty Snacks / Crackers&lt;/u&gt;</group><group label="g6" id="yCBuI">&lt;u&gt;Nuts / Seeds / Grains&lt;/u&gt;</group><group label="g7" id="FrXJO">&lt;u&gt;Other Foods&lt;/u&gt;</group><group label="g8" id="TjX8y">&lt;u&gt;Beverages&lt;/u&gt;</group><row label="r1" groups="g1" randomize="0" ss:rowClassNames="cr1" id="SJVlB">Fresh vegetables</row><row label="r2" groups="g1" randomize="0" ss:rowClassNames="cr2" id="NjNW1">Dried vegetables</row><row label="r3" groups="g1" randomize="0" ss:rowClassNames="cr3" id="mXtxw">Fresh fruit</row><row label="r4" groups="g1" randomize="0" ss:rowClassNames="cr4" id="flFgb">Dried fruit</row><row label="r5" groups="g1" randomize="0" ss:rowClassNames="cr5" id="QduJl">Fruit cup / applesauce</row><row label="r6" groups="g1" randomize="0" ss:rowClassNames="cr6" id="h6LAH">Fruit snack (e.g., roll-ups)</row><row label="r51" groups="g1" randomize="0" ss:rowClassNames="cr51" id="Wk5Lu">Salad</row><row label="r7" groups="g2" randomize="0" ss:rowClassNames="cr7" id="jcdxX">Cheese / cheese sticks</row><row label="r8" groups="g2" randomize="0" ss:rowClassNames="cr8" id="yucAT">Cottage cheese</row><row label="r9" groups="g2" randomize="0" ss:rowClassNames="cr9" id="qUBgD">Yogurt / yogurt drink</row><row label="r10" groups="g2" randomize="0" ss:rowClassNames="cr10" id="iPVkH">Smoothie</row><row label="r11" groups="g3" randomize="0" ss:rowClassNames="cr11" id="agwPp">Cereal / granola bar</row><row label="r12" groups="g3" randomize="0" ss:rowClassNames="cr12" id="Hvcpc">Fruit / nut bar</row><row label="r13" groups="g3" randomize="0" ss:rowClassNames="cr13" id="U49Qg">Protein / nutrition / energy bar</row><row label="r14" groups="g3" randomize="0" ss:rowClassNames="cr14" id="W3bVG">Weight management bar</row><row label="r15" groups="g4" randomize="0" ss:rowClassNames="cr15" id="hi8AC">Donuts, danish, scones, coffee cake - from bakery or homemade</row><row label="r16" groups="g4" randomize="0" ss:rowClassNames="cr16" id="ZYEh4">Muffins - from bakery or homemade</row><row label="r17" groups="g4" randomize="0" ss:rowClassNames="cr17" id="A0FlG">Cake, pie, brownies - from bakery or homemade</row><row label="r18" groups="g4" randomize="0" ss:rowClassNames="cr18" id="NdGL2">Cookies - from bakery or homemade</row><row label="r19" groups="g4" randomize="0" ss:rowClassNames="cr19" id="R0cKM">Branded pre-packaged snack cakes, muffins, donuts, pies, etc. (e.g., Little Debbie, Hostess)</row><row label="r20" groups="g4" randomize="0" ss:rowClassNames="cr20" id="SYWnB">Branded pre-packaged cookies (e.g., Oreos, Chips Ahoy)</row><row label="r21" groups="g4" randomize="0" ss:rowClassNames="cr21" id="AC2C4">Toaster pastries</row><row label="r22" groups="g4" randomize="0" ss:rowClassNames="cr22" id="WXiZB">Treat bars (e.g., Rice Krispie treats, S'mores)</row><row label="r23" groups="g4" randomize="0" ss:rowClassNames="cr23" id="X0WxU">Non-chocolate candy</row><row label="r24" groups="g4" randomize="0" ss:rowClassNames="cr24" id="D5NM5">Chocolate candy</row><row label="r25" groups="g4" randomize="0" ss:rowClassNames="cr25" id="Dwrh3">Gelatin</row><row label="r26" groups="g4" randomize="0" ss:rowClassNames="cr26" id="jnAD6">Pudding</row><row label="r27" groups="g4" randomize="0" ss:rowClassNames="cr27" id="VDnUj">Frozen yogurt / ice cream / other frozen treats</row><row label="r28" groups="g5" randomize="0" ss:rowClassNames="cr28" id="eMgEA">Chips (e.g., potato, tortilla, corn, pita, etc.)</row><row label="r29" groups="g5" randomize="0" ss:rowClassNames="cr29" id="utZcg">Pretzels</row><row label="r30" groups="g5" randomize="0" ss:rowClassNames="cr30" id="uBBvy">Popcorn</row><row label="r31" groups="g5" randomize="0" ss:rowClassNames="cr31" id="A5pI6">Crackers</row><row label="r32" groups="g5" randomize="0" ss:rowClassNames="cr32" id="T3Q8G">Flavored / sandwich crackers (e.g., Ritz bits sandwiches, Cheez-Its, Goldfish)</row><row label="r33" groups="g5" randomize="0" ss:rowClassNames="cr33" id="cNBIq">Rice cakes</row><row label="r34" groups="g6" randomize="0" ss:rowClassNames="cr34" id="hutnF">Almonds</row><row label="r35" groups="g6" randomize="0" ss:rowClassNames="cr35" id="ZPxcj">Other nuts (e.g., peanuts, pistachios, cashews)</row><row label="r36" groups="g6" randomize="0" ss:rowClassNames="cr36" id="VGXBY">Seeds (e.g., sunflower, pumpkin)</row><row label="r37" groups="g6" randomize="0" ss:rowClassNames="cr37" id="nC23O">Trail mix</row><row label="r38" groups="g6" randomize="0" ss:rowClassNames="cr38" id="CWbYq">Granola (loose, not in bar form)</row><row label="r39" groups="g7" randomize="0" ss:rowClassNames="cr39" id="clT4C">Toast / bagel / pita / other bread product (not sandwich)</row><row label="r40" groups="g7" randomize="0" ss:rowClassNames="cr40" id="T3bCW">Waffles / pancakes</row><row label="r41" groups="g7" randomize="0" ss:rowClassNames="cr41" id="SQ6EL">Sandwich (hot or cold)</row><row label="r42" groups="g7" randomize="0" ss:rowClassNames="cr42" id="sJFlD">Pizza</row><row label="r43" groups="g7" randomize="0" ss:rowClassNames="cr43" id="UCFdZ">Chicken nuggets / strips</row><row label="r44" groups="g7" randomize="0" ss:rowClassNames="cr44" id="tXVSu">French fries / onion rings / tater tots</row><row label="r45" groups="g7" randomize="0" ss:rowClassNames="cr45" id="sOG3R">Hot appetizer (e.g., pizza rolls, mozzarella sticks, hot pockets, egg rolls, wings, etc.)</row><row label="r46" groups="g7" randomize="0" ss:rowClassNames="cr46" id="wq284">Cold / hot cereal</row><row label="r47" groups="g7" randomize="0" ss:rowClassNames="cr47" id="FlPTv">Eggs</row><row label="r48" groups="g7" randomize="0" ss:rowClassNames="cr48" id="wUwVf">Jerky / dried or cured meats</row><row label="r49" groups="g7" randomize="0" ss:rowClassNames="cr49" id="fZskC">Pre-packaged meal / snack packs (e.g., Lunchables)</row><row label="r52" groups="g8" randomize="0" ss:rowClassNames="cr52" id="aQqxm">Coffee</row><row label="r53" groups="g8" randomize="0" ss:rowClassNames="cr53" id="Zh3hW">Flavored coffee</row><row label="r54" groups="g8" randomize="0" ss:rowClassNames="cr54" id="Y8sas">Ready-to-drink coffee</row><row label="r55" groups="g8" randomize="0" ss:rowClassNames="cr55" id="D6law">Soda</row><row label="r56" groups="g8" randomize="0" ss:rowClassNames="cr56" id="yyCIo">Juices</row></checkbox><suspend id="PcwM4"/><checkbox label="Q203b" onLoad="copy('Q203a' , rows=True ,groups=True)" rowCond="Q203a[row]" shuffle="rows,groups" shuffleBy="Q203a" id="uFPwq"><title id="P2u01">And which of these foods &lt;u&gt;do you personally&lt;/u&gt; snack on?</title><comment id="n8K9Z">Select all that apply</comment><exec id="BM925">
#dOrder_func(Sc7c.choices,Q203a.rows,'cr',2,'any')
    </exec><validate id="G3GtU">
if Q203a.count gt 1:
    if Q203b.count lt 1:
        for i in Q203b.rows:
            error(res.Q203berr,i)
    </validate></checkbox><suspend id="LAWkI"/><exec cond="Q203a.count==1" id="d3ZSI">
#autocoding q203b  
#for eachRows in Q203a.rows:
#    if bool(eachRows.val):
#        for autoEachRows in Q203b.rows:
#            if eachRows.label==autoEachRows.label:
#                autoEachRows.val=eachRows.index
#                break
                 
#for eachRows in Q203b.rows:
#    if bool(eachRows.val):
#        print "autocoded Q203b value"
#        print eachRows.label
#        break
  </exec></block><html label="intro301" where="survey" id="br7iH">&lt;b&gt;Now we have just a few questions for you about one specific type of snack food.&lt;/b&gt;</html><suspend id="Oefyo"/><!--
<checkbox 
  label="Q301_temp"
  cond="0"
  atleast="1"
  shuffle="rows"
  uses="multicol.7">
  <title>Which of the following brands of pre-packaged snack cakes have you heard of?</title>
  <comment>Select all that apply</comment>
  <row label="r1"><img src="[rel entenmanns.png]" /></row>
  <row label="r2"><img src="[rel hostess.png]" /></row>
  <row label="r3"><img src="[rel littledebie.png]" /></row>
  <row label="r4"><img src="[rel dolly.png]" /></row>
  <row label="r5"><img src="[rel bigtexas.png]" /></row>
  <row label="r6"><img src="[rel cloverhill.png]" /></row>
  <row label="r7"><img src="[rel krispykreme.png]" /></row>
  <noanswer label="n99">None of these</noanswer>
</checkbox>

<suspend/>
-->
<checkbox label="Q301" atleast="1" shuffle="rows" id="dBlss"><title id="I2VwB">Which of the following brands of pre-packaged snack cakes have you heard of?</title><comment id="tsfJD">SELECT ALL THAT APPLY</comment><row label="r1" id="Gb2AX">entenmanns_t$</row><row label="r2" id="CX2q7">hostess$</row><row label="r3" id="hjJfl">littledebie$</row><row label="r4" id="eBCNn">dolly$</row><row label="r5" id="UjKgG">bigtexas$</row><row label="r6" id="Sevhu">cloverhill$</row><row label="r7" id="MhIkV">krispykreme$</row><row label="r8" exclusive="1" randomize="0" id="HWs6Y">None of these</row><style name="question.after" id="lih7K">
&lt;script type="text/javascript" src="//d2n88fe5uqdqty.cloudfront.net/ssi_js/decipher/ssi_ALLInOne_Confirmit_1.1_decipher.js"&gt;&lt;/script&gt;

  &lt;script type="text/javascript"&gt;
  var lukanka;
  (function (lukanka) {
  if (!lukanka.qDefs)
  lukanka.qDefs = {};
  lukanka.qDefs["${this.label}"] = ${jsexport()};  
  $ (document).ready(function(){
  parseJsexportData(); 
  });
  })(lukanka || (lukanka = {}));   
  &lt;/script&gt;

  &lt;!-- #### libraries #### --&gt;
  &lt;script type="text/javascript" src="//d2n88fe5uqdqty.cloudfront.net/rnd/plugins/jquery-ui-1.10.3.custom.min.js"&gt;&lt;/script&gt;
  &lt;script type="text/javascript" src="//d2n88fe5uqdqty.cloudfront.net/rnd/plugins/fancybox/3.x.x/3.1.20/jquery.fancybox.js"&gt;&lt;/script&gt; 
  &lt;!-- #### JS tool #### --&gt;
  &lt;script type="text/javascript" src="//d2n88fe5uqdqty.cloudfront.net/rnd/tools/imageselector/js/image_selector_v2_decipher_v7.min.js"&gt;&lt;/script&gt;
  &lt;!-- #### CSS #### --&gt;
  &lt;link rel="stylesheet" type="text/css" href="//d2n88fe5uqdqty.cloudfront.net/rnd/tools/imageselector/css/image_selector_v1.4.css"/&gt;
  &lt;link rel="stylesheet" type="text/css" href="//d2n88fe5uqdqty.cloudfront.net/rnd/plugins/fancybox/3.x.x/3.1.20/jquery.fancybox.css"/&gt;
  &lt;link rel="stylesheet" href="//d2n88fe5uqdqty.cloudfront.net/rnd/template/GSL_2016/tool_css/imageSelector2.css"&gt;
  &lt;link rel="stylesheet" type="text/css" href="//d2n88fe5uqdqty.cloudfront.net/rnd/plugins/ionicons/ionicons-2.0.1/css/ionicons.min.css"&gt;

  &lt;img class="loadinganimation" style="margin-top:30px" src="//d2n88fe5uqdqty.cloudfront.net/rnd/ssistem/images/loading.gif" /&gt;
  &lt;div id="ToolContainer"&gt;&lt;/div&gt;
  &lt;div style="clear:both"&gt;&lt;/div&gt;

  &lt;script type="text/javascript"&gt;
  $ (function() {
    $ ('#ToolContainer').ImageSelector({
    
      // =============== DOCUMENTATION ===============&gt; https://confluence.surveysampling.com/x/H8J7AQ
    
      QuestionType: "M",   // "M" or "S" - make sure it corresponds to the ConfirmIt question type
      sURL: "https://survey-d.dynata.com/survey/selfserve/53b/1909631/",
      extension:".png",
      zoomExtension: ".png",
      ItemsPerRow : 4,

      isImgTitleAdded : false,
      ImgTitleFontSize : 15,
      ImgTitleUppercase : true,
      theSplitor : "$",  // if two "Splitors" are in the answer text, the titlePosition "both" is activated with the text after the second "Splitor"

      isZoomInAdded: true,

      MinAnswers:1, // Put "0" if question not mandatory. 
      MaxAnswers:40,

      VerticalSpacing: 35,
      HorizontalSpacing: 25,
      itemWidth: 200,
      itemHeight: 180,

      codesOther: [], // codes without images, leave as [] if none
      codesOtherSpecify: [], // other specify codes, leave as [] if none
      codesDK: ["r8"], // exclusive codes, leave as [] if none

      DKWidth: 160,
      DKHeight: 40,
      AnimationEffect : "drop", // options: blind , bounce , clip , drop , explode , fold , highlight , puff , pulsate , scale , shake , slide
      titlePosition: "bottom" // "top" | "bottom" | "both"
      // thisForm : getFormName(1),
    });
    
    setTimeout(function() {  
      $ ('input.other_text_input').attr('placeholder','&#62143;........');    
    }, 1000);
    
   countIt({
    "tool-id": "jIS001",
    "project-id": '${project_id if project_id else "p1019653"}',
    "order": '${order_id if order_id else "ORD-12345-ABCD"}'
    });     
    
  });
  &lt;/script&gt;
  &lt;div style="clear:both"&gt;&lt;/div&gt;

  &lt;style&gt;
  .answers.answers-list { display:none; }
  .fir-hidden { left: 0px !important; }
  .fir-icon { display: none; }
  #ToolContainer { margin-bottom: 50px !important; }
  &lt;/style&gt;
</style></checkbox><suspend id="SPqWO"/><checkbox label="Q302" atleast="1" shuffle="rows,groups" shuffleBy="Q101" uses="separator.5" id="myGBi"><title id="eHGQe">Which of these have you personally eaten in the past 6 months?</title><comment id="pEoHX">Select all that apply</comment><group label="g1" id="r184x">&lt;div&gt;&lt;img src="[rel entenmanns_t.png]" style="max-width:20%;" /&gt;&lt;/div&gt;</group><group label="g2" id="HsfVl">&lt;div&gt;&lt;img src="[rel hostess.png]" style="max-width:20%;" /&gt;  &lt;/div&gt;</group><group label="g3" id="GLZFZ">&lt;div&gt;&lt;img src="[rel littledebie.png]" style="max-width:20%;" /&gt; &lt;/div&gt;</group><group label="g4" randomize="0" id="XF7Xb">&lt;b&gt;&lt;u&gt;Other Brands&lt;/u&gt;&lt;/b&gt;</group><group label="g5" randomize="0" id="dTBNn"/><row label="r1" cond="Q301.r1" groups="g1" ss:rowClassNames="cr1" id="amysJ">Cookies</row><row label="r2" cond="Q301.r1" groups="g1" ss:rowClassNames="cr2" id="wRWt5">Danish</row><row label="r3" cond="Q301.r1" groups="g1" ss:rowClassNames="cr3" id="DdhJa">Donuts</row><row label="r4" cond="Q301.r1" groups="g1" ss:rowClassNames="cr4" id="l8jFr">Loaf cakes (blueberry, chocolate, butter, lemon)</row><row label="r5" cond="Q301.r1" alt="Entenmanns's  mini muffins" groups="g1" ss:rowClassNames="cr5" id="gT8fM">Mini muffins</row><row label="r6" cond="Q301.r1" groups="g1" ss:rowClassNames="cr6" id="LYF6D">Pop-ems</row><row label="r7" cond="Q301.r1" groups="g1" ss:rowClassNames="cr7" id="NgC1a">Other Entenmann's</row><row label="r8" cond="Q301.r2" groups="g2" ss:rowClassNames="cr8" id="hXuYk">Cupcakes</row><row label="r9" cond="Q301.r2" groups="g2" ss:rowClassNames="cr9" id="pnWl3">Ding Dongs</row><row label="r10" cond="Q301.r2" groups="g2" ss:rowClassNames="cr10" id="fbKyl">Donettes</row><row label="r11" cond="Q301.r2" groups="g2" ss:rowClassNames="cr11" id="E0Qq8">Ho Hos</row><row label="r12" cond="Q301.r2" alt="Hostess mini muffins" groups="g2" ss:rowClassNames="cr12" id="jR0b1">Mini Muffins</row><row label="r13" cond="Q301.r2" groups="g2" ss:rowClassNames="cr13" id="OUbtQ">Twinkies</row><row label="r14" cond="Q301.r2" groups="g2" ss:rowClassNames="cr14" id="ajR67">Other Hostess</row><row label="r15" cond="Q301.r3" groups="g3" ss:rowClassNames="cr15" id="JnLUK">Donuts</row><row label="r16" cond="Q301.r3" groups="g3" ss:rowClassNames="cr16" id="YGOgi">Honey Buns</row><row label="r17" cond="Q301.r3" alt="Little Debbie mini muffins" groups="g3" ss:rowClassNames="cr17" id="M9MLx">Mini Muffins</row><row label="r18" cond="Q301.r3" groups="g3" ss:rowClassNames="cr18" id="AXGRe">Nutty Buddys</row><row label="r19" cond="Q301.r3" groups="g3" ss:rowClassNames="cr19" id="hLlhw">Oatmeal Cr&#232;me Pies</row><row label="r20" cond="Q301.r3" groups="g3" ss:rowClassNames="cr20" id="Brvdn">Swiss Rolls</row><row label="r21" cond="Q301.r3" groups="g3" ss:rowClassNames="cr21" id="w5SG7">Zebra Cakes</row><row label="r22" cond="Q301.r3" groups="g3" ss:rowClassNames="cr22" id="KcwPs">Other Little Debbie</row><row label="r23" cond="Q301.r5" groups="g4" ss:rowClassNames="cr23" id="QKdi5">Big Texas - any type</row><row label="r24" cond="Q301.r6" groups="g4" ss:rowClassNames="cr24" id="wUjFr">Clover Hill - any type</row><row label="r25" cond="Q301.r4" groups="g4" ss:rowClassNames="cr25" id="dqZJs">Dolly Madison - any type</row><row label="r26" cond="Q301.r7" groups="g4" ss:rowClassNames="cr26" id="D9Gnp">Krispy Kreme - any type</row><row label="r27" groups="g4" ss:rowClassNames="cr27" id="nXIqv">Other Brand - any type</row><row label="r28" groups="g4" ss:rowClassNames="cr28" id="ZgNl9">Store Brand / Private Label - any type</row><row label="r29" exclusive="1" groups="g5" randomize="0" ss:rowClassNames="cr29" id="Kt4uT">None of these</row></checkbox><suspend id="fFTuY"/><checkbox label="Q303" cond="Q301.r1 or Q301.r2 or Q301.r3" atleast="1" colLegendRows="6,11,16" shuffle="rows,cols" id="CIqD5"><title id="BIfYU">Listed below are different brand(s) of pre-packaged snack cakes, muffins, donuts and pies.  Based on your own impressions and experiences, please check all of the statements you would use to describe each of these brands.  You can select as many or as few statements as you would like for each brand.</title><comment id="Tx6ng">SELECT ALL THAT APPLY FOR EACH BRAND</comment><col label="c1" cond="Q301.r2" id="dYvU7">&lt;img src="[rel hostess.png]" style="max-width:150px" /&gt;</col><col label="c2" cond="Q301.r3" id="dQg7p">&lt;img src="[rel littledebie.png]" style="max-width:150px" /&gt;</col><col label="c3" cond="Q301.r1" id="q7rNn">&lt;img src="[rel entenmanns_t.png]" style="max-width:150px" /&gt;</col><col label="c99" cond="1" exclusive="1" randomize="0" id="SxCCD">None of these</col><row label="r1" id="K7WdA">Uses high quality ingredients</row><row label="r2" id="XcYVg">Products are fresh tasting</row><row label="r3" id="OEpH1">Products taste really great</row><row label="r4" id="jgNWV">Offers a wide variety of tastes and textures</row><row label="r5" id="mwUxd">Is a brand I really love</row><row label="r6" id="aIQ3F">Offers healthier snack cake choices</row><row label="r7" id="s2Zbj">Is a brand I can relate to</row><row label="r8" id="OkBVu">Brings back good childhood memories</row><row label="r9" id="HPsTV">Is a sophisticated brand</row><row label="r10" id="t0Jjw">Is a fun brand</row><row label="r11" id="pC334">Is an innovative brand</row><row label="r12" id="Hc0HU">Is a brand that both kids and adults enjoy</row><row label="r13" id="ses2x">Is a good value for the money</row><row label="r14" id="lO7a7">Is expensive</row><row label="r15" id="sPNfT">Is a cheap brand</row><row label="r16" id="OoSu0">Is a brand I'm indifferent to</row><row label="r17" id="dKQWn">Is highly processed, full of artificial ingredients</row><row label="r18" id="u1LcD">Products are stale tasting</row><row label="r19" id="bRVMX">Products are not as good as they used to be</row><row label="r20" id="WAubX">Is an outdated brand</row><row label="r21" id="AT9jv">For quality purposes please check 'none of these'</row><row label="r22" id="etv0H">Is a brand I used to love but have not thought about for a while</row></checkbox><suspend id="JPXTq"/><exec id="WERTy">
print Q303.displayed
</exec><radio label="dQ303flag" cond="Q303.displayed" optional="1" where="execute,survey,report" id="HVejs"><title id="Y1Fwu">For quality purposes please check 'none of these'</title><comment id="xWjqn">Select one</comment><exec id="DPHRf">
dQ303flag.val = dQ303flag.r2.index
if Q303.r21.c99:
    dQ303flag.val = dQ303flag.r1.index
  </exec><row label="r1" value="1" id="Z4sqQ">Yes</row><row label="r2" value="2" id="oU4MS">No</row></radio><suspend id="umcKl"/><checkbox label="Q304a" atleast="1" id="PI5lK"><title id="rOrNA">Where do you typically buy pre-packaged snack cakes, muffins, donuts and pies?</title><comment id="KyOQ5">Select all that apply</comment><row label="r1" id="CtNWl">Grocery store</row><row label="r2" id="HEc8V">Mass merchandise store</row><row label="r3" id="VBpYX">Convenience store</row><row label="r4" id="ZFxdK">Club store</row><row label="r5" id="d96gm">Gas station mini-mart</row><row label="r6" id="dsZJH">Drug store</row><row label="r7" id="DHKco">Dollar store</row><row label="r8" open="1" openSize="25" randomize="0" id="cktve">Other &lt;i&gt; &lt;b&gt;(PLEASE SPECIFY)&lt;/b&gt;&lt;/i&gt;:</row><row label="r9" exclusive="1" randomize="0" id="ofMSs">I don't buy these products</row></checkbox><suspend id="p3ChR"/><radio label="Q304b" cond="not Q304a.r9" rowCond="Q304a[row]" id="mEFyx"><title id="uidi8">Which one store type do you buy them from most often?</title><comment id="Ch2fE">SELECT ONE</comment><row label="r1" value="1" id="oKqIW">Grocery store</row><row label="r2" value="2" id="cQ2Pi">Mass merchandise store</row><row label="r3" value="3" id="NBhAO">Convenience store</row><row label="r4" value="4" id="hxOky">Club store</row><row label="r5" value="5" id="PKTWR">Gas station mini-mart</row><row label="r6" value="6" id="VVe0f">Drug store</row><row label="r7" value="7" id="vmdCf">Dollar store</row><row label="r8" randomize="0" value="8" id="f3IJc">${Q304a.r8.open}</row></radio><suspend id="iWpVd"/><html label="intro401" where="survey" id="FgMMF">&lt;b&gt;Finally, just a few last questions for classification purposes.&lt;/b&gt;</html><suspend id="KmxcL"/><radio label="Q401" cond="Sc2.val ge 18" id="Tlu58"><title id="whoq1">What is your current marital status?</title><comment id="J1bNX">Select one</comment><row label="r1" value="1" id="HSxT4">Married / living with spouse / partner</row><row label="r2" value="2" id="wH1Ya">Separated / divorced / widowed</row><row label="r3" value="3" id="RDJvX">Single (never married)</row></radio><suspend id="lv6MB"/><number label="Q402" optional="0" size="3" ss:postText="${res.Q402postext}" verify="range(1,99)" id="WdEVR"><title id="Z5x5j">Including yourself, how many people live in your household?</title><comment id="m4IQk">ENTER ONE NUMBER</comment><style name="question.after" wrap="ready" id="w8q8r">
$ (':text').attr('maxlength','2')
</style></number><suspend id="btGXj"/><pipe label="Q403apipe" capture="" id="rvlnV"><case label="r1" cond="Sc2.val ge 14 and Sc2.val le 17" id="NZC4I">&lt;u&gt;Not including yourself&lt;/u&gt;, are there any other children under age 18 living in your household?</case><case label="r2" cond="Sc2.val ge 18" id="BQdoC">Are there any children under age 18 living in your household?</case><case label="r3" cond="1" id="rZVDq">UNDEFINED</case></pipe><radio label="Q403a" cond="Q402.ival gt 1" id="bNvF3"><title id="K6gVd">[pipe: Q403apipe]</title><comment id="u3yij">Select one</comment><row label="r1" value="1" id="tuoR5">Yes</row><row label="r2" value="2" id="JPoWp">No</row></radio><suspend id="fkvbd"/><pipe label="Q403bpipe" capture="" id="CQ3h5"><case label="r1" cond="Sc2.val ge 14 and Sc2.val le 17" id="n91er">&lt;u&gt;Not including yourself&lt;/u&gt;, how many children do you have in your household in each of these age groups?</case><case label="r2" cond="Sc2.val ge 18" id="ECj76">How many children do you have in your household in each of these age groups?</case><case label="r3" cond="1" id="PW6kL">UNDEFINED</case></pipe><exec id="pWnRo">
count = 0
</exec><number label="Q403b" cond="Q403a.r1" optional="0" size="3" verify="range(0,99)" id="Wd41l"><title id="rcLqp">[pipe: Q403bpipe]</title><comment id="vLldH">ENTER ONE NUMBER FOR EACH.  IF NONE ENTER "0"</comment><validate id="b4yZj">
#No need to add validation for Q402 as per pm
if Q403b.sum lt 1 and count==0:
    error("Please check your answer")
    count+=1
  </validate><row label="r1" id="IrjXq">Under age 5</row><row label="r2" id="CBAO3">Age 6-10</row><row label="r3" id="UtHoQ">Age 11-17</row><style name="question.after" wrap="ready" id="ZHUTG">
$ (':text').attr('maxlength','2')
</style></number><suspend id="X38mD"/><radio label="Q404" cond="Sc2.ival ge 18" id="qrxuF"><title id="xinrU">What is the highest level of education you have completed?</title><comment id="v9EAN">Select one</comment><row label="r1" value="1" id="NFS8x">Some high school or less</row><row label="r2" value="2" id="Ch35x">High school graduate</row><row label="r3" value="3" id="IsjKO">Trade school completion</row><row label="r4" value="4" id="RpX62">Some college</row><row label="r5" value="5" id="w5SpY">College graduate</row><row label="r6" value="6" id="AseaB">Post-graduate degree</row></radio><suspend id="qHFxX"/><radio label="Q405" cond="Sc2.ival ge 18" id="xS9u7"><title id="MFfVd">Are you currently ...?</title><comment id="glrRf">Select one</comment><row label="r1" value="1" id="Wvo7r">Employed full-time</row><row label="r2" value="2" id="xHPhs">Employed part-time</row><row label="r3" value="3" id="Oebhp">Temporarily unemployed / seeking employment / disabled or unable to work</row><row label="r4" value="4" id="KcE6V">Retired from workforce</row><row label="r5" value="5" id="Jq5sI">Student - full or part time</row><row label="r6" value="6" id="kpCUI">Homemaker / at home</row></radio><suspend id="c1b5a"/><radio label="Q406" cond="Sc2.ival ge 18" id="VPEsL"><title id="dRsF1">Which income range best represents your total household income before taxes?</title><comment id="LvoZ7">Select one</comment><row label="r1" value="1" id="gWaQI">Less than $25,000</row><row label="r2" value="2" id="fNuQf">$25,000 to $39,999</row><row label="r3" value="3" id="wrjfU">$40,000 to $49,999</row><row label="r4" value="4" id="b15D3">$50,000 to $69,999</row><row label="r5" value="5" id="UMnng">$70,000 to $99,999</row><row label="r6" value="6" id="oMv4j">$100,000 to $150,000</row><row label="r7" value="7" id="hWJTj">Over $150,000</row><row label="r8" value="8" id="q5xmj">Prefer not to answer</row></radio><suspend id="kDx3j"/><radio label="Q407a" id="nSv7U"><title id="KHhDE">Are you of Hispanic or Latino descent?</title><comment id="SPDX2">Select one</comment><row label="r1" value="1" id="kfPAv">Yes</row><row label="r2" value="2" id="B5w4F">No</row></radio><suspend id="uSa6h"/><radio label="Q407b" id="EfT0O"><title id="o5gha">Which of the following best describes your ethnicity?</title><comment id="OOL2m">Select one</comment><row label="r1" value="1" id="Gn18O">Asian</row><row label="r2" value="2" id="ktHa7">Black / African American</row><row label="r3" value="3" id="RbKct">Hispanic / Latino</row><row label="r4" value="4" id="lBTiM">Native American / American Indian</row><row label="r5" value="5" id="QNbrw">White / Caucasian</row><row label="r6" open="1" openSize="25" randomize="0" value="6" id="JVaHq">Other (specify):</row><row label="r7" value="7" id="guUNZ">Prefer not to answer</row></radio><suspend id="DVJhI"/><select label="Q408a" id="yvTjH"><title id="rOeiS">In which state do you live?</title><choice label="chAL" value="1" id="Xsiwn">Alabama</choice><choice label="chAK" value="2" id="EUpXn">Alaska</choice><choice label="chAZ" value="3" id="ixAIj">Arizona</choice><choice label="chAR" value="4" id="fWB9o">Arkansas</choice><choice label="chCA" value="5" id="CbMtV">California</choice><choice label="chCO" value="6" id="unVbL">Colorado</choice><choice label="chCT" value="7" id="GmGma">Connecticut</choice><choice label="chDE" value="8" id="leer1">Delaware</choice><choice label="chDC" value="9" id="e3S7M">Washington, D.C.</choice><choice label="chFL" value="10" id="J4B7N">Florida</choice><choice label="chGA" value="11" id="HfuEM">Georgia</choice><choice label="chHI" value="12" id="J3SSj">Hawaii</choice><choice label="chID" value="13" id="wZu72">Idaho</choice><choice label="chIL" value="14" id="YwOZu">Illinois</choice><choice label="chIN" value="15" id="QOvm1">Indiana</choice><choice label="chIA" value="16" id="TiG8q">Iowa</choice><choice label="chKS" value="17" id="M5TL8">Kansas</choice><choice label="chKY" value="18" id="rQdLk">Kentucky</choice><choice label="chLA" value="19" id="ZF18H">Louisiana</choice><choice label="chME" value="20" id="k5hGP">Maine</choice><choice label="chMD" value="21" id="rpS2d">Maryland</choice><choice label="chMA" value="22" id="iqsun">Massachusetts</choice><choice label="chMI" value="23" id="vZT20">Michigan</choice><choice label="chMN" value="24" id="KwL6H">Minnesota</choice><choice label="chMS" value="25" id="Os1Gt">Mississippi</choice><choice label="chMO" value="26" id="tIfev">Missouri</choice><choice label="chMT" value="27" id="SU3MT">Montana</choice><choice label="chNE" value="28" id="ZNxLF">Nebraska</choice><choice label="chNV" value="29" id="Wx9In">Nevada</choice><choice label="chNH" value="30" id="RF3uy">New Hampshire</choice><choice label="chNJ" value="31" id="hxhQm">New Jersey</choice><choice label="chNM" value="32" id="oEwh9">New Mexico</choice><choice label="chNY" value="33" id="SaUdc">New York</choice><choice label="chNC" value="34" id="Dqc0j">North Carolina</choice><choice label="chND" value="35" id="LQrTZ">North Dakota</choice><choice label="chOH" value="36" id="enodr">Ohio</choice><choice label="chOK" value="37" id="FWA2m">Oklahoma</choice><choice label="chOR" value="38" id="W1El8">Oregon</choice><choice label="chPA" value="39" id="siL1n">Pennsylvania</choice><choice label="chRI" value="40" id="c4CfP">Rhode Island</choice><choice label="chSC" value="41" id="C8OAI">South Carolina</choice><choice label="chSD" value="42" id="qjAxb">South Dakota</choice><choice label="chTN" value="43" id="mQCri">Tennessee</choice><choice label="chTX" value="44" id="scnxu">Texas</choice><choice label="chUT" value="45" id="bhxPT">Utah</choice><choice label="chVT" value="46" id="Z0W3m">Vermont</choice><choice label="chVA" value="47" id="E18Kl">Virginia</choice><choice label="chWA" value="48" id="DJ5FV">Washington</choice><choice label="chWV" value="49" id="UqJ2u">West Virginia</choice><choice label="chWI" value="50" id="Kynxh">Wisconsin</choice><choice label="chWY" value="51" id="UvIyc">Wyoming</choice></select><suspend id="jcHF4"/><radio label="Q408b" id="lvqm9"><title id="UVEcL">How would you classify the area in which you live?</title><comment id="MiWnt">Select one</comment><row label="r1" value="1" id="LP8RF">Urban</row><row label="r2" value="2" id="qLmKX">Suburban</row><row label="r3" value="3" id="vEyUU">Rural</row></radio><suspend id="QfSfP"/><note id="vO6QX">End = Questionnaire</note><suspend id="hbgSF"/><html label="rnEndOfSurvey" cond="gv.survey.root.state.testing" translateable="0" where="survey" id="nnent">Thanks for completing the survey. This page is shown for testing only. Please close the window to exit.</html><suspend id="mPqM2"/><block label="blkTimeTracking" builder:title="To track time respondent spent" id="KlbKU"><exec id="O7OKt">
#set time and LOI

tplSubmitTime.r6.val = round(timeSpent())
tplSubmitTime.r7.val = rnGetTimerTime(p) 
tplSubmitTime.r8.val = round(time.time() - start_timestamp.val)

preciseSum = tplSubmitTime.r2.ival
timeSpentSum = tplSubmitTime.r6.ival
totalSum = tplSubmitTime.r8.ival

if timeSpentSum &gt; preciseSum:
  loiTime = int(timeSpentSum - tplSubmitTime.r3.ival + tplSubmitTime.r7.ival)
else:
  loiTime = int(totalSum - tplSubmitTime.r3.ival)
  
LOI.val = loiTime
  </exec><number label="start_timestamp" cond="tplShow()" size="15" translateable="0" where="execute,survey,notdp" id="MWB5Q"><title id="ty6GY">survey starting timestamp</title></number><float label="tplSubmitTime" cond="tplShow()" size="10" translateable="0" where="execute,survey,notdp" id="uonEq"><title id="u6NQK">Tracking submit time. time from preciseTime doesn't include loading time (seconds)</title><row label="r1" id="UoaLn">preciseTime: Number of pages submitted</row><row label="r2" id="TWaOK">preciseTime: Sum of time spent on each page(s)</row><row label="r3" id="IHiAA">preciseTime: Sum of time over page time limit</row><row label="r4" id="hhS7H">preciseTime: mean of time spent on each page</row><row label="r5" id="pmLJL">preciseTime: median of time spent on each page</row><row label="r6" id="huRJN">timeSpent()</row><row label="r7" id="q0j3C">Time tracked by rnTimer</row><row label="r8" id="h9mFL">Total time(end time - start time)</row></float><number label="LOI" cond="tplShow()" size="10" translateable="0" where="execute,survey,notdp" id="wH8b9"><title id="mX7PD">LOI (seconds)</title></number></block><suspend id="ihDAN"/><block label="blkQualityChecks" builder:title="Quality Checks" sst="0" id="vsYth"><exec id="ZjCpn">
#######################################
# Speeder Auto Check Settings:
#######################################

tplSpeederAutoCheckSettings.r0.val = '1' #On/Off settings (1 = On, 2 = Off) - this check On by default
tplSpeederAutoCheckSettings.r1.val = '0.3' #Percentage of Median time used to check speeder
tplSpeederAutoCheckSettings.r2.val = '30' #Minimum completes to start auto check
tplSpeederAutoCheckSettings.r3.val = '1000' #Maximum completes used to calculate Median time

#######################################
# Straightliner Check Settings:
#######################################

tplStraightlinerSettings.r0.val = '2' #On/Off settings (1 = On, 2 = Off) - this check Off by default

#####
# adjust other Straightliner Settings in isStraightliner() function 
#######################################
  </exec><text label="tplSpeederAutoCheckSettings" cond="tplShow()" randomize="0" size="25" translateable="0" where="execute,survey,notdp" id="avRbh"><title id="FJcHM">Speeder Auto Check Settings:</title><row label="r0" id="m83jZ">AutoCheck Speeder On/Off settings</row><row label="r1" id="sgfgA">Percentage of Median time used to check racer</row><row label="r2" id="f6WNj">Minimum completes to start auto check</row><row label="r3" id="atGD8">Maximum completes used to calculate Median time</row></text><text label="tplStraightlinerSettings" cond="tplShow()" randomize="0" size="25" translateable="0" where="execute,survey,notdp" id="D4IFR"><title id="tYP9O">Straightliner Settings:</title><row label="r0" id="fjrmq">Straightliner Check On/Off settings</row></text><suspend id="OhTjF"/><block label="blkSpeederAutoCheckAPI" cond="(tplSpeederAutoCheckSettings.r0.val == '1' and gv.survey.root.state.live)" builder:title="Speeder Auto Check API Call" id="ujtqy"><exec id="Oiooh">
#check if average of time per page availabe
curPid= gv.survey.path
if tplSubmitTime.r4.ival &gt; 0:
  tt = tplSubmitTime.r4.ival
  curPid = curPid + "avg"
else:
  tt = LOI.ival

mc = int(tplSpeederAutoCheckSettings.r3.val)
medianTime.r3.val = tt

server = getHostId(gv)
p.speederDict = dict(pnum=curPid,ss=server,rid=record,tt=tt,mc=mc)
    </exec><logic label="speederAutoCheckAPI" api:params="p.speederDict" api:url="https://speeders.researchnow.com/spdrchk/gbtSpeedTest.php" uses="api.1" id="yMvIq"/><exec id="MowZu">
if speederAutoCheckAPI.status == 200:
    outputAPI = json_loads(speederAutoCheckAPI.r[1:-2])
    medianTime.r1.val = outputAPI['medianTime']
    medianTime.r2.val = outputAPI['completes']
    isSpeederAutoCheck()
else:
    speederAutoCheck.val = speederAutoCheck.r3.index
    </exec><text label="medianTime" cond="tplShow()" randomize="0" size="25" translateable="0" where="execute,survey,notdp" id="VWypO"><title id="ITibh">medianTime</title><row label="r1" id="SMlgu">medianTime</row><row label="r2" id="f5am5">medianCompletes</row><row label="r3" id="aVTRn">time used for speeder check</row></text></block><exec id="TIREJ">
#######################################
# Run Quality Checks  
#######################################
isStraightliner()
isSpeeder()
isSlowpoke()
  </exec><block label="blkQualityCheckTracking" cond="tplShow()" builder:title="Quality Check Tracking Questions" id="mqarg"><radio label="straightlinerCheck" optional="1" randomize="0" translateable="0" where="execute,survey,notdp" id="Pxo7I"><title id="pBVnh">Straightliner Check</title><row label="r1" id="nWOTb">Failed</row><row label="r2" id="dhCAH">Passed</row></radio><radio label="speederAuto" optional="1" randomize="0" translateable="0" where="execute,survey,notdp" id="NCQy5"><title id="f5uWB">Speeder Check</title><row label="r1" id="Xk06h">Failed</row><row label="r2" id="EJBaV">Passed</row></radio><radio label="speederAutoCheck" optional="1" randomize="0" translateable="0" where="execute,survey,notdp" id="QpPY3"><title id="n3LKt">Speeder Auto Check</title><row label="r1" id="An3HK">Failed</row><row label="r2" id="hTh4B">Passed</row><row label="r3" id="WFNRU">Server Call Failed</row></radio><radio label="slowpokeCheck" optional="1" randomize="0" translateable="0" where="execute,survey,notdp" id="mqTR7"><title id="G8oSS">Slowpoke Check</title><row label="r1" id="K7MgK">Failed</row><row label="r2" id="WZ1vk">Passed</row></radio></block><suspend id="XNRas"/><exec id="ne0oQ">
#######################################
# drop marker  
#######################################

if straightlinerCheck.r1:
    setMarker('straightlinerAuto')

elif speederAuto.r1:
    setMarker('speederAuto')

elif speederAutoCheck.r1:
    setMarker('speederAutoCheck')
    
elif slowpokeCheck.r1:
    setMarker('slowpokeAuto')
  </exec><suspend id="KGQFo"/><term cond="hasMarker('speederAuto')" id="L7jOw">Speeder Check Failed</term><term cond="hasMarker('speederAutoCheck')" id="O85KO">Speeder Auto Check Failed</term><term cond="hasMarker('slowpokeAuto')" id="fkia4">SlowPoke Check Failed</term><term cond="hasMarker('straightlinerAuto')" id="lKb58">Straightliner Check Failed</term><term cond="hasMarker('badopenAuto')" id="PW1q0">Verbatim Check Failed</term><term cond="hasMarker('failedAuto')" id="qeYqV">Quality Check Failed</term><suspend id="K7rF1"/><exec when="init" id="HgiTb">
#######################################
# Quality Checks Functions
#######################################



def isStraightliner():
    if tplStraightlinerSettings.r0.val == '1':
        #######################################
        # Update straightliner check settings
        #######################################

        questions = [q4, q5, q6]               ##### grids to checks
        numbRequiredGridsToFail = 1       ##### number of grids respondent need to fail at
        
        #######################################     
        # Example how to add other checks   
        ####################################### 
        #otherFailed = 0
        #if not q1.r1.c2:
        #   otherFailed = 1
        
        straightlinerCheck.val = straightlinerCheck.r2.index
        
        gridsFailed = 0
        for q in questions:
            sl = True
            pval = None
            rowcount = 0
            for r in q.rows: 
                if r.any:
                    if  pval is not None and r.val != pval:   # not first answered row
                        sl = False
                        break
                    pval = r.val
                    rowcount += 1

            if rowcount &gt; 1 and sl:           #if more than 1 row and straightliner
                gridsFailed += 1
                     
        #######################################     
        # Example how to add other checks to condition
        ####################################### 
        # if gridsFailed &gt;= numbRequiredGridsToFail or otherFailed:
                                
        if gridsFailed &gt;= numbRequiredGridsToFail:
            straightlinerCheck.val = straightlinerCheck.r1.index
            

def isSpeeder():  
    quota_cells = gv.survey.root.quota.getQuotaCells()
    current, limit, overquota = quota_cells["/Settings/Seconds"]
    p.minTime = limit
    
    speederAuto.val = speederAuto.r2.index

    if timeSpent() lt p.minTime:
        speederAuto.val = speederAuto.r1.index

def isSpeederAutoCheck():

    current, limit, overquota = gv.survey.root.quota.getQuotaCells()["/Settings/Seconds"]
    
    if limit == 0:
        speederAutoCheck.val = speederAutoCheck.r2.index 

        if int(medianTime.r2.val) &gt;= int(tplSpeederAutoCheckSettings.r2.val): #check # of completes to date
            mTime = int(medianTime.r1.val) * float(tplSpeederAutoCheckSettings.r1.val) #check median time
            print "mTIME:"
            print mTime

            if float(medianTime.r3.val) lt mTime:
                speederAutoCheck.val = speederAutoCheck.r1.index

def isSlowpoke():
    from datetime import datetime
    
    quota_cells = gv.survey.root.quota.getQuotaCells()
    current, limit, overquota = quota_cells["/Settings/Hours"]
    maxTime = limit * 3600
    
    fmt = '%m/%d/%Y %H:%M'

    start_time = datetime.strptime(start_date.unsafe_val, fmt)
    end_time = datetime.now()

    slowpokeCheck.val = slowpokeCheck.r2.index
    
    if maxTime != 0 and (end_time - start_time).total_seconds() gt maxTime:
        slowpokeCheck.val = slowpokeCheck.r1.index
    
#######################################
# Utility Functions
#######################################
def tplShow():
    return settings=='test' or gv.survey.root.state == 'live'
    
# 
#######################################
  </exec></block></survey>
